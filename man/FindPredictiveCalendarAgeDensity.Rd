% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FindPredictiveCalendarAgeDensity.R
\name{FindPredictiveCalendarAgeDensity}
\alias{FindPredictiveCalendarAgeDensity}
\title{Plots the calendar age density of all objects from the output data}
\usage{
FindPredictiveCalendarAgeDensity(
  output_data,
  calendar_age_sequence,
  n_posterior_samples,
  interval_width = "2sigma",
  bespoke_probability = NA
)
}
\arguments{
\item{output_data}{The return value from one of the updating functions e.g.
\link{WalkerBivarDirichlet} or
\link{PolyaUrnBivarDirichlet}.}

\item{calendar_age_sequence}{A vector containing the calendar ages to
calculate the predictive density for.}

\item{n_posterior_samples}{Current number of samples it will draw from this
posterior to estimate the calendar age density (possibly repeats).}

\item{interval_width}{The confidence intervals to show for both the
calibration curve and the predictive density. Choose from one of "1sigma",
"2sigma" and "bespoke". Default is "2sigma".}

\item{bespoke_probability}{The probability to use for the confidence interval
if "bespoke" is chosen above. E.g. if 0.95 is chosen, then the 95\% confidence
interval is calculated. Ignored if "bespoke" is not chosen.}
}
\value{
A data frame of the \code{calendar_age}, the
\code{density_mean} and the confidence intervals for the density
\code{density_ci_lower} and \code{density_ci_upper} for each set of output data.
}
\description{
Plots the input radiocarbon determinations and calibration curve, with the
output predicted density on the same plot. Can also optionally show the
SPD estimate
}
\examples{
# Find results for example output, 2-sigma confidence interval (default)
FindPredictiveCalendarAgeDensity(
  walker_example_output, seq(600, 1700, length=12), 500)

# Find results for example output, 1-sigma confidence interval (default)
FindPredictiveCalendarAgeDensity(
  walker_example_output, seq(600, 1700, length=12), 500, "1sigma")

# Find results for example output, 95\% confidence interval (default)
FindPredictiveCalendarAgeDensity(
  walker_example_output, seq(600, 1700, length=12), 500, "bespoke", 0.95)
}
