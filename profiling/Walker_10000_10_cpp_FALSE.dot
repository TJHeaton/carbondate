digraph xyz {
rankdir=TB;
"-\n62 (0.32%) \n of 62 (0.32%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"...elt\n68 (0.35%) \n of 88 (0.45%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"...elt\n68 (0.35%) \n of 88 (0.45%)" -> "length\n44 (0.22%) \n of 44 (0.22%)"[label="  20", penwidth=1];
"...length\n17 (0.09%) \n of 17 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".Call\n4 (0.02%) \n of 4 (0.02%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)"[shape=box,style=filled,color=black,fillcolor="#FFFF6B"fontsize=17.9599554565149];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "-\n62 (0.32%) \n of 62 (0.32%)"[label="  7", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> ".UpdatePhiTau\n63 (0.32%) \n of 172 (0.88%)"[label="  172", penwidth=2];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "*\n32 (0.16%) \n of 32 (0.16%)"[label="  2", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "/\n14 (0.07%) \n of 14 (0.07%)"[label="  2", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "^\n331 (1.69%) \n of 331 (1.69%)"[label="  1", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "+\n75 (0.38%) \n of 75 (0.38%)"[label="  2", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "<\n89 (0.45%) \n of 89 (0.45%)"[label="  1", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "<=\n1 (0.01%) \n of 1 (0.01%)"[label="  1", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "c\n34 (0.17%) \n of 34 (0.17%)"[label="  1", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "cumprod\n2 (0.01%) \n of 2 (0.01%)"[label="  2", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "is.na\n34 (0.17%) \n of 34 (0.17%)"[label="  16", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "length\n44 (0.22%) \n of 44 (0.22%)"[label="  2", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "list\n5 (0.03%) \n of 5 (0.03%)"[label="  1", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "max\n5 (0.03%) \n of 5 (0.03%)"[label="  5", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "min\n2 (0.01%) \n of 2 (0.01%)"[label="  2", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "sample.int\n395 (2.01%) \n of 979 (4.99%)"[label="  979", penwidth=3];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "stats::dnorm\n2742 (13.97%) \n of 3171 (16.16%)"[label="  271", penwidth=2];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "stats::rbeta\n1 (0.01%) \n of 1 (0.01%)"[label="  1", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "stats::rgamma\n23 (0.12%) \n of 23 (0.12%)"[label="  9", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "stats::rnorm\n25 (0.13%) \n of 25 (0.13%)"[label="  7", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "stats::runif\n1438 (7.33%) \n of 1438 (7.33%)"[label="  15", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "sum\n8 (0.04%) \n of 8 (0.04%)"[label="  6", penwidth=1];
".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)" -> "which\n222 (1.13%) \n of 375 (1.91%)"[label="  375", penwidth=3];
".FindSliceInterval\n1327 (6.76%) \n of 4182 (21.31%)"[shape=box,style=filled,color=black,fillcolor="#FFFF24"fontsize=20.8];
".FindSliceInterval\n1327 (6.76%) \n of 4182 (21.31%)" -> "-\n62 (0.32%) \n of 62 (0.32%)"[label="  17", penwidth=1];
".FindSliceInterval\n1327 (6.76%) \n of 4182 (21.31%)" -> ".ThetaLogLikelihood\n5910 (30.12%) \n of 8988 (45.81%)"[label="  2290", penwidth=3];
".FindSliceInterval\n1327 (6.76%) \n of 4182 (21.31%)" -> "(\n24 (0.12%) \n of 24 (0.12%)"[label="  3", penwidth=1];
".FindSliceInterval\n1327 (6.76%) \n of 4182 (21.31%)" -> "*\n32 (0.16%) \n of 32 (0.16%)"[label="  10", penwidth=1];
".FindSliceInterval\n1327 (6.76%) \n of 4182 (21.31%)" -> "&\n36 (0.18%) \n of 36 (0.18%)"[label="  36", penwidth=2];
".FindSliceInterval\n1327 (6.76%) \n of 4182 (21.31%)" -> "+\n75 (0.38%) \n of 75 (0.38%)"[label="  9", penwidth=1];
".FindSliceInterval\n1327 (6.76%) \n of 4182 (21.31%)" -> "<\n89 (0.45%) \n of 89 (0.45%)"[label="  14", penwidth=1];
".FindSliceInterval\n1327 (6.76%) \n of 4182 (21.31%)" -> ">\n76 (0.39%) \n of 76 (0.39%)"[label="  14", penwidth=1];
".FindSliceInterval\n1327 (6.76%) \n of 4182 (21.31%)" -> "c\n34 (0.17%) \n of 34 (0.17%)"[label="  33", penwidth=2];
".FindSliceInterval\n1327 (6.76%) \n of 4182 (21.31%)" -> "floor\n87 (0.44%) \n of 87 (0.44%)"[label="  8", penwidth=1];
".FindSliceInterval\n1327 (6.76%) \n of 4182 (21.31%)" -> "stats::runif\n1438 (7.33%) \n of 1438 (7.33%)"[label="  421", penwidth=3];
".rs.availablePackages\n0 (0%) \n of 1 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".rs.availablePackages\n0 (0%) \n of 1 (0.01%)" -> ".rs.onAvailablePackagesStale\n0 (0%) \n of 1 (0.01%)"[label="  1", penwidth=1];
".rs.discoverPackageDependencies\n0 (0%) \n of 8 (0.04%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".rs.discoverPackageDependencies\n0 (0%) \n of 8 (0.04%)" -> ".rs.parsePackageDependencies\n0 (0%) \n of 3 (0.02%)"[label="  3", penwidth=1];
".rs.discoverPackageDependencies\n0 (0%) \n of 8 (0.04%)" -> ".rs.readSourceDocument\n0 (0%) \n of 3 (0.02%)"[label="  3", penwidth=1];
".rs.discoverPackageDependencies\n0 (0%) \n of 8 (0.04%)" -> "character\n1 (0.01%) \n of 1 (0.01%)"[label="  1", penwidth=1];
".rs.discoverPackageDependencies\n0 (0%) \n of 8 (0.04%)" -> "list.files\n1 (0.01%) \n of 1 (0.01%)"[label="  1", penwidth=1];
".rs.enqueClientEvent\n0 (0%) \n of 1 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".rs.enqueClientEvent\n0 (0%) \n of 1 (0.01%)" -> ".Call\n4 (0.02%) \n of 4 (0.02%)"[label="  1", penwidth=1];
".rs.onAvailablePackagesReady\n0 (0%) \n of 6 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".rs.onAvailablePackagesReady\n0 (0%) \n of 6 (0.03%)" -> ".rs.tryCatch\n0 (0%) \n of 7 (0.04%)"[label="  6", penwidth=1];
".rs.onAvailablePackagesStale\n0 (0%) \n of 1 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".rs.onAvailablePackagesStale\n0 (0%) \n of 1 (0.01%)" -> "setwd\n1 (0.01%) \n of 1 (0.01%)"[label="  1", penwidth=1];
".rs.parsePackageDependencies\n0 (0%) \n of 3 (0.02%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".rs.parsePackageDependencies\n0 (0%) \n of 3 (0.02%)" -> ".rs.recursiveWalk\n0 (0%) \n of 2 (0.01%)"[label="  2", penwidth=1];
".rs.parsePackageDependencies\n0 (0%) \n of 3 (0.02%)" -> ".rs.tryCatch\n0 (0%) \n of 7 (0.04%)"[label="  1", penwidth=1];
".rs.readSourceDocument\n0 (0%) \n of 3 (0.02%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".rs.readSourceDocument\n0 (0%) \n of 3 (0.02%)" -> ".Call\n4 (0.02%) \n of 4 (0.02%)"[label="  3", penwidth=1];
".rs.recursiveWalk\n0 (0%) \n of 2 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".rs.recursiveWalk\n0 (0%) \n of 2 (0.01%)" -> ".rs.recursiveWalk\n0 (0%) \n of 2 (0.01%)"[label="  2", penwidth=1];
".rs.recursiveWalk\n0 (0%) \n of 2 (0.01%)" -> "fn\n0 (0%) \n of 2 (0.01%)"[label="  2", penwidth=1];
".rs.rpc.discover_package_dependencies\n0 (0%) \n of 9 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".rs.rpc.discover_package_dependencies\n0 (0%) \n of 9 (0.05%)" -> ".rs.availablePackages\n0 (0%) \n of 1 (0.01%)"[label="  1", penwidth=1];
".rs.rpc.discover_package_dependencies\n0 (0%) \n of 9 (0.05%)" -> ".rs.discoverPackageDependencies\n0 (0%) \n of 8 (0.04%)"[label="  8", penwidth=1];
".rs.tryCatch\n0 (0%) \n of 7 (0.04%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".rs.tryCatch\n0 (0%) \n of 7 (0.04%)" -> "tryCatch\n0 (0%) \n of 7 (0.04%)"[label="  7", penwidth=1];
".SampleFromSliceInterval\n2863 (14.59%) \n of 9277 (47.28%)"[shape=box,style=filled,color=black,fillcolor="#FFB300"fontsize=30.5574868076548];
".SampleFromSliceInterval\n2863 (14.59%) \n of 9277 (47.28%)" -> "-\n62 (0.32%) \n of 62 (0.32%)"[label="  30", penwidth=2];
".SampleFromSliceInterval\n2863 (14.59%) \n of 9277 (47.28%)" -> ".rs.rpc.discover_package_dependencies\n0 (0%) \n of 9 (0.05%)"[label="  2", penwidth=1];
".SampleFromSliceInterval\n2863 (14.59%) \n of 9277 (47.28%)" -> ".ThetaLogLikelihood\n5910 (30.12%) \n of 8988 (45.81%)"[label="  5285", penwidth=4];
".SampleFromSliceInterval\n2863 (14.59%) \n of 9277 (47.28%)" -> "(\n24 (0.12%) \n of 24 (0.12%)"[label="  21", penwidth=1];
".SampleFromSliceInterval\n2863 (14.59%) \n of 9277 (47.28%)" -> "*\n32 (0.16%) \n of 32 (0.16%)"[label="  19", penwidth=1];
".SampleFromSliceInterval\n2863 (14.59%) \n of 9277 (47.28%)" -> "+\n75 (0.38%) \n of 75 (0.38%)"[label="  16", penwidth=1];
".SampleFromSliceInterval\n2863 (14.59%) \n of 9277 (47.28%)" -> "<\n89 (0.45%) \n of 89 (0.45%)"[label="  41", penwidth=2];
".SampleFromSliceInterval\n2863 (14.59%) \n of 9277 (47.28%)" -> "stats::runif\n1438 (7.33%) \n of 1438 (7.33%)"[label="  1000", penwidth=3];
".ThetaLogLikelihood\n5910 (30.12%) \n of 8988 (45.81%)"[shape=box,style=filled,color=black,fillcolor="#FFB700"fontsize=43.9053527488392];
".ThetaLogLikelihood\n5910 (30.12%) \n of 8988 (45.81%)" -> ".rs.rpc.discover_package_dependencies\n0 (0%) \n of 9 (0.05%)"[label="  2", penwidth=1];
".ThetaLogLikelihood\n5910 (30.12%) \n of 8988 (45.81%)" -> "+\n75 (0.38%) \n of 75 (0.38%)"[label="  33", penwidth=2];
".ThetaLogLikelihood\n5910 (30.12%) \n of 8988 (45.81%)" -> "<\n89 (0.45%) \n of 89 (0.45%)"[label="  33", penwidth=2];
".ThetaLogLikelihood\n5910 (30.12%) \n of 8988 (45.81%)" -> "<Anonymous>\n0 (0%) \n of 16 (0.08%)"[label="  7", penwidth=1];
".ThetaLogLikelihood\n5910 (30.12%) \n of 8988 (45.81%)" -> ">\n76 (0.39%) \n of 76 (0.39%)"[label="  30", penwidth=2];
".ThetaLogLikelihood\n5910 (30.12%) \n of 8988 (45.81%)" -> "floor\n87 (0.44%) \n of 87 (0.44%)"[label="  79", penwidth=2];
".ThetaLogLikelihood\n5910 (30.12%) \n of 8988 (45.81%)" -> "stats::dnorm\n2742 (13.97%) \n of 3171 (16.16%)"[label="  2894", penwidth=3];
".UpdateMuPhi\n8 (0.04%) \n of 12 (0.06%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".UpdateMuPhi\n8 (0.04%) \n of 12 (0.06%)" -> "*\n32 (0.16%) \n of 32 (0.16%)"[label="  1", penwidth=1];
".UpdateMuPhi\n8 (0.04%) \n of 12 (0.06%)" -> "stats::rnorm\n25 (0.13%) \n of 25 (0.13%)"[label="  1", penwidth=1];
".UpdateMuPhi\n8 (0.04%) \n of 12 (0.06%)" -> "sum\n8 (0.04%) \n of 8 (0.04%)"[label="  2", penwidth=1];
".UpdatePhiTau\n63 (0.32%) \n of 172 (0.88%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".UpdatePhiTau\n63 (0.32%) \n of 172 (0.88%)" -> "+\n75 (0.38%) \n of 75 (0.38%)"[label="  1", penwidth=1];
".UpdatePhiTau\n63 (0.32%) \n of 172 (0.88%)" -> "list\n5 (0.03%) \n of 5 (0.03%)"[label="  4", penwidth=1];
".UpdatePhiTau\n63 (0.32%) \n of 172 (0.88%)" -> "mean\n29 (0.15%) \n of 73 (0.37%)"[label="  73", penwidth=2];
".UpdatePhiTau\n63 (0.32%) \n of 172 (0.88%)" -> "stats::rgamma\n23 (0.12%) \n of 23 (0.12%)"[label="  14", penwidth=1];
".UpdatePhiTau\n63 (0.32%) \n of 172 (0.88%)" -> "stats::rnorm\n25 (0.13%) \n of 25 (0.13%)"[label="  17", penwidth=1];
".WalkerAlphaLogLiklihood\n4 (0.02%) \n of 4 (0.02%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".WalkerUpdateAlpha\n19 (0.1%) \n of 39 (0.2%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".WalkerUpdateAlpha\n19 (0.1%) \n of 39 (0.2%)" -> ".WalkerAlphaLogLiklihood\n4 (0.02%) \n of 4 (0.02%)"[label="  4", penwidth=1];
".WalkerUpdateAlpha\n19 (0.1%) \n of 39 (0.2%)" -> "stats::dgamma\n4 (0.02%) \n of 4 (0.02%)"[label="  4", penwidth=1];
".WalkerUpdateAlpha\n19 (0.1%) \n of 39 (0.2%)" -> "stats::pnorm\n2 (0.01%) \n of 2 (0.01%)"[label="  2", penwidth=1];
".WalkerUpdateAlpha\n19 (0.1%) \n of 39 (0.2%)" -> "stats::runif\n1438 (7.33%) \n of 1438 (7.33%)"[label="  2", penwidth=1];
".WalkerUpdateAlpha\n19 (0.1%) \n of 39 (0.2%)" -> "unique\n6 (0.03%) \n of 10 (0.05%)"[label="  8", penwidth=1];
"(\n24 (0.12%) \n of 24 (0.12%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"*\n32 (0.16%) \n of 32 (0.16%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"/\n14 (0.07%) \n of 14 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"&\n36 (0.18%) \n of 36 (0.18%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"^\n331 (1.69%) \n of 331 (1.69%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
"+\n75 (0.38%) \n of 75 (0.38%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"<\n89 (0.45%) \n of 89 (0.45%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"<=\n1 (0.01%) \n of 1 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"<Anonymous>\n0 (0%) \n of 16 (0.08%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"<Anonymous>\n0 (0%) \n of 16 (0.08%)" -> ".rs.enqueClientEvent\n0 (0%) \n of 1 (0.01%)"[label="  1", penwidth=1];
"<Anonymous>\n0 (0%) \n of 16 (0.08%)" -> ".rs.onAvailablePackagesReady\n0 (0%) \n of 6 (0.03%)"[label="  6", penwidth=1];
"<Anonymous>\n0 (0%) \n of 16 (0.08%)" -> "/\n14 (0.07%) \n of 14 (0.07%)"[label="  3", penwidth=1];
"<Anonymous>\n0 (0%) \n of 16 (0.08%)" -> "stats::dnorm\n2742 (13.97%) \n of 3171 (16.16%)"[label="  6", penwidth=1];
"==\n9 (0.05%) \n of 9 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
">\n76 (0.39%) \n of 76 (0.39%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"all\n42 (0.21%) \n of 42 (0.21%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"anyNA\n15 (0.08%) \n of 15 (0.08%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"aperm\n0 (0%) \n of 2 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"aperm\n0 (0%) \n of 2 (0.01%)" -> "aperm.default\n2 (0.01%) \n of 2 (0.01%)"[label="  2", penwidth=1];
"aperm.default\n2 (0.01%) \n of 2 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"apply\n2 (0.01%) \n of 4 (0.02%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"apply\n2 (0.01%) \n of 4 (0.02%)" -> "aperm\n0 (0%) \n of 2 (0.01%)"[label="  2", penwidth=1];
"array\n2 (0.01%) \n of 2 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"as.name\n1 (0.01%) \n of 1 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"c\n34 (0.17%) \n of 34 (0.17%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cat\n9 (0.05%) \n of 9 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"character\n1 (0.01%) \n of 1 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cumprod\n2 (0.01%) \n of 2 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"doTryCatch\n0 (0%) \n of 7 (0.04%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"doTryCatch\n0 (0%) \n of 7 (0.04%)" -> "withCallingHandlers\n0 (0%) \n of 7 (0.04%)"[label="  7", penwidth=1];
"eval\n0 (0%) \n of 19478 (99.27%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"eval\n0 (0%) \n of 19478 (99.27%)" -> "eval\n0 (0%) \n of 19478 (99.27%)"[label="  19478", penwidth=4];
"eval\n0 (0%) \n of 19478 (99.27%)" -> "profile_walker\n0 (0%) \n of 19478 (99.27%)"[label="  19478", penwidth=4];
"floor\n87 (0.44%) \n of 87 (0.44%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"fn\n0 (0%) \n of 2 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"fn\n0 (0%) \n of 2 (0.01%)" -> "handleLibraryRequireCall\n1 (0.01%) \n of 2 (0.01%)"[label="  2", penwidth=1];
"handleLibraryRequireCall\n1 (0.01%) \n of 2 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"handleLibraryRequireCall\n1 (0.01%) \n of 2 (0.01%)" -> "as.name\n1 (0.01%) \n of 1 (0.01%)"[label="  1", penwidth=1];
"is.na\n34 (0.17%) \n of 34 (0.17%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"is.numeric\n2 (0.01%) \n of 2 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"isTRUE\n91 (0.46%) \n of 126 (0.64%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"isTRUE\n91 (0.46%) \n of 126 (0.64%)" -> "is.na\n34 (0.17%) \n of 34 (0.17%)"[label="  18", penwidth=1];
"isTRUE\n91 (0.46%) \n of 126 (0.64%)" -> "length\n44 (0.22%) \n of 44 (0.22%)"[label="  17", penwidth=1];
"length\n44 (0.22%) \n of 44 (0.22%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"list\n5 (0.03%) \n of 5 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"list.files\n1 (0.01%) \n of 1 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"mapply\n0 (0%) \n of 12 (0.06%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"mapply\n0 (0%) \n of 12 (0.06%)" -> "<Anonymous>\n0 (0%) \n of 16 (0.08%)"[label="  9", penwidth=1];
"mapply\n0 (0%) \n of 12 (0.06%)" -> "simplify2array\n0 (0%) \n of 3 (0.02%)"[label="  3", penwidth=1];
"max\n5 (0.03%) \n of 5 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"mean\n29 (0.15%) \n of 73 (0.37%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"mean\n29 (0.15%) \n of 73 (0.37%)" -> "-\n62 (0.32%) \n of 62 (0.32%)"[label="  5", penwidth=1];
"mean\n29 (0.15%) \n of 73 (0.37%)" -> "mean.default\n21 (0.11%) \n of 39 (0.2%)"[label="  39", penwidth=2];
"mean.default\n21 (0.11%) \n of 39 (0.2%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"mean.default\n21 (0.11%) \n of 39 (0.2%)" -> "is.numeric\n2 (0.01%) \n of 2 (0.01%)"[label="  2", penwidth=1];
"mean.default\n21 (0.11%) \n of 39 (0.2%)" -> "isTRUE\n91 (0.46%) \n of 126 (0.64%)"[label="  11", penwidth=1];
"mean.default\n21 (0.11%) \n of 39 (0.2%)" -> "length\n44 (0.22%) \n of 44 (0.22%)"[label="  5", penwidth=1];
"min\n2 (0.01%) \n of 2 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"parse\n1 (0.01%) \n of 1 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"pb$up\n0 (0%) \n of 9 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"pb$up\n0 (0%) \n of 9 (0.05%)" -> "cat\n9 (0.05%) \n of 9 (0.05%)"[label="  9", penwidth=1];
"profile_walker\n0 (0%) \n of 19478 (99.27%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"profile_walker\n0 (0%) \n of 19478 (99.27%)" -> "WalkerBivarDirichlet\n431 (2.2%) \n of 19478 (99.27%)"[label="  19478", penwidth=4];
"readRDS\n6 (0.03%) \n of 6 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"sample.int\n395 (2.01%) \n of 979 (4.99%)"[shape=box,style=filled,color=black,fillcolor="#FFFFC7"fontsize=14];
"sample.int\n395 (2.01%) \n of 979 (4.99%)" -> ">\n76 (0.39%) \n of 76 (0.39%)"[label="  3", penwidth=1];
"sample.int\n395 (2.01%) \n of 979 (4.99%)" -> "stopifnot\n418 (2.13%) \n of 581 (2.96%)"[label="  581", penwidth=3];
"setwd\n1 (0.01%) \n of 1 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"simplify2array\n0 (0%) \n of 3 (0.02%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"simplify2array\n0 (0%) \n of 3 (0.02%)" -> "array\n2 (0.01%) \n of 2 (0.01%)"[label="  2", penwidth=1];
"simplify2array\n0 (0%) \n of 3 (0.02%)" -> "unlist\n1 (0.01%) \n of 1 (0.01%)"[label="  1", penwidth=1];
"slice_sample_fn\n957 (4.88%) \n of 16100 (82.05%)"[shape=box,style=filled,color=black,fillcolor="#FF3B00"fontsize=17.6725776274996];
"slice_sample_fn\n957 (4.88%) \n of 16100 (82.05%)" -> "-\n62 (0.32%) \n of 62 (0.32%)"[label="  3", penwidth=1];
"slice_sample_fn\n957 (4.88%) \n of 16100 (82.05%)" -> ".FindSliceInterval\n1327 (6.76%) \n of 4182 (21.31%)"[label="  4182", penwidth=4];
"slice_sample_fn\n957 (4.88%) \n of 16100 (82.05%)" -> ".SampleFromSliceInterval\n2863 (14.59%) \n of 9277 (47.28%)"[label="  9277", penwidth=4];
"slice_sample_fn\n957 (4.88%) \n of 16100 (82.05%)" -> ".ThetaLogLikelihood\n5910 (30.12%) \n of 8988 (45.81%)"[label="  1413", penwidth=3];
"slice_sample_fn\n957 (4.88%) \n of 16100 (82.05%)" -> "stats::rexp\n268 (1.37%) \n of 268 (1.37%)"[label="  268", penwidth=2];
"source\n0 (0%) \n of 19478 (99.27%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"source\n0 (0%) \n of 19478 (99.27%)" -> "withVisible\n0 (0%) \n of 19478 (99.27%)"[label="  19478", penwidth=4];
"sqrt\n72 (0.37%) \n of 72 (0.37%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"stats::dgamma\n4 (0.02%) \n of 4 (0.02%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"stats::dnorm\n2742 (13.97%) \n of 3171 (16.16%)"[shape=box,style=filled,color=black,fillcolor="#FFFF57"fontsize=29.9011705456492];
"stats::dnorm\n2742 (13.97%) \n of 3171 (16.16%)" -> ".rs.rpc.discover_package_dependencies\n0 (0%) \n of 9 (0.05%)"[label="  4", penwidth=1];
"stats::dnorm\n2742 (13.97%) \n of 3171 (16.16%)" -> "/\n14 (0.07%) \n of 14 (0.07%)"[label="  9", penwidth=1];
"stats::dnorm\n2742 (13.97%) \n of 3171 (16.16%)" -> "^\n331 (1.69%) \n of 331 (1.69%)"[label="  330", penwidth=3];
"stats::dnorm\n2742 (13.97%) \n of 3171 (16.16%)" -> "+\n75 (0.38%) \n of 75 (0.38%)"[label="  14", penwidth=1];
"stats::dnorm\n2742 (13.97%) \n of 3171 (16.16%)" -> "sqrt\n72 (0.37%) \n of 72 (0.37%)"[label="  72", penwidth=2];
"stats::pnorm\n2 (0.01%) \n of 2 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"stats::rbeta\n1 (0.01%) \n of 1 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"stats::rexp\n268 (1.37%) \n of 268 (1.37%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
"stats::rgamma\n23 (0.12%) \n of 23 (0.12%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"stats::rnorm\n25 (0.13%) \n of 25 (0.13%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"stats::runif\n1438 (7.33%) \n of 1438 (7.33%)"[shape=box,style=filled,color=black,fillcolor="#FFFFB3"fontsize=21.6591781930894];
"stopifnot\n418 (2.13%) \n of 581 (2.96%)"[shape=box,style=filled,color=black,fillcolor="#FFFFE6"fontsize=14];
"stopifnot\n418 (2.13%) \n of 581 (2.96%)" -> "...elt\n68 (0.35%) \n of 88 (0.45%)"[label="  88", penwidth=2];
"stopifnot\n418 (2.13%) \n of 581 (2.96%)" -> "...length\n17 (0.09%) \n of 17 (0.09%)"[label="  17", penwidth=1];
"stopifnot\n418 (2.13%) \n of 581 (2.96%)" -> ".rs.rpc.discover_package_dependencies\n0 (0%) \n of 9 (0.05%)"[label="  1", penwidth=1];
"stopifnot\n418 (2.13%) \n of 581 (2.96%)" -> "all\n42 (0.21%) \n of 42 (0.21%)"[label="  42", penwidth=2];
"stopifnot\n418 (2.13%) \n of 581 (2.96%)" -> "anyNA\n15 (0.08%) \n of 15 (0.08%)"[label="  15", penwidth=1];
"sum\n8 (0.04%) \n of 8 (0.04%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryCatch\n0 (0%) \n of 7 (0.04%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryCatch\n0 (0%) \n of 7 (0.04%)" -> "tryCatchList\n0 (0%) \n of 7 (0.04%)"[label="  7", penwidth=1];
"tryCatchList\n0 (0%) \n of 7 (0.04%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryCatchList\n0 (0%) \n of 7 (0.04%)" -> "tryCatchOne\n0 (0%) \n of 7 (0.04%)"[label="  7", penwidth=1];
"tryCatchOne\n0 (0%) \n of 7 (0.04%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryCatchOne\n0 (0%) \n of 7 (0.04%)" -> "doTryCatch\n0 (0%) \n of 7 (0.04%)"[label="  7", penwidth=1];
"unique\n6 (0.03%) \n of 10 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"unique\n6 (0.03%) \n of 10 (0.05%)" -> "unique.default\n4 (0.02%) \n of 4 (0.02%)"[label="  4", penwidth=1];
"unique.default\n4 (0.02%) \n of 4 (0.02%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"unlist\n1 (0.01%) \n of 1 (0.01%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"utils::setTxtProgressBar\n0 (0%) \n of 9 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"utils::setTxtProgressBar\n0 (0%) \n of 9 (0.05%)" -> "pb$up\n0 (0%) \n of 9 (0.05%)"[label="  9", penwidth=1];
"WalkerBivarDirichlet\n431 (2.2%) \n of 19478 (99.27%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"WalkerBivarDirichlet\n431 (2.2%) \n of 19478 (99.27%)" -> ".DPWalkerUpdate\n989 (5.04%) \n of 2869 (14.62%)"[label="  2869", penwidth=3];
"WalkerBivarDirichlet\n431 (2.2%) \n of 19478 (99.27%)" -> ".UpdateMuPhi\n8 (0.04%) \n of 12 (0.06%)"[label="  12", penwidth=1];
"WalkerBivarDirichlet\n431 (2.2%) \n of 19478 (99.27%)" -> ".WalkerUpdateAlpha\n19 (0.1%) \n of 39 (0.2%)"[label="  39", penwidth=2];
"WalkerBivarDirichlet\n431 (2.2%) \n of 19478 (99.27%)" -> "apply\n2 (0.01%) \n of 4 (0.02%)"[label="  4", penwidth=1];
"WalkerBivarDirichlet\n431 (2.2%) \n of 19478 (99.27%)" -> "mapply\n0 (0%) \n of 12 (0.06%)"[label="  12", penwidth=1];
"WalkerBivarDirichlet\n431 (2.2%) \n of 19478 (99.27%)" -> "slice_sample_fn\n957 (4.88%) \n of 16100 (82.05%)"[label="  16100", penwidth=4];
"WalkerBivarDirichlet\n431 (2.2%) \n of 19478 (99.27%)" -> "unique\n6 (0.03%) \n of 10 (0.05%)"[label="  2", penwidth=1];
"WalkerBivarDirichlet\n431 (2.2%) \n of 19478 (99.27%)" -> "utils::setTxtProgressBar\n0 (0%) \n of 9 (0.05%)"[label="  9", penwidth=1];
"which\n222 (1.13%) \n of 375 (1.91%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
"which\n222 (1.13%) \n of 375 (1.91%)" -> "==\n9 (0.05%) \n of 9 (0.05%)"[label="  9", penwidth=1];
"which\n222 (1.13%) \n of 375 (1.91%)" -> ">\n76 (0.39%) \n of 76 (0.39%)"[label="  29", penwidth=2];
"which\n222 (1.13%) \n of 375 (1.91%)" -> "isTRUE\n91 (0.46%) \n of 126 (0.64%)"[label="  115", penwidth=2];
"withCallingHandlers\n0 (0%) \n of 7 (0.04%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"withCallingHandlers\n0 (0%) \n of 7 (0.04%)" -> "parse\n1 (0.01%) \n of 1 (0.01%)"[label="  1", penwidth=1];
"withCallingHandlers\n0 (0%) \n of 7 (0.04%)" -> "readRDS\n6 (0.03%) \n of 6 (0.03%)"[label="  6", penwidth=1];
"withVisible\n0 (0%) \n of 19478 (99.27%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"withVisible\n0 (0%) \n of 19478 (99.27%)" -> "eval\n0 (0%) \n of 19478 (99.27%)"[label="  19478", penwidth=4];
}