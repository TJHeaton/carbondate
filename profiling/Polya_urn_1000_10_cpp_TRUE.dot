digraph xyz {
rankdir=TB;
":\n4 (0.29%) \n of 4 (0.29%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"!=\n2 (0.14%) \n of 2 (0.14%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"...elt\n9 (0.65%) \n of 11 (0.79%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"...elt\n9 (0.65%) \n of 11 (0.79%)" -> "length\n27 (1.94%) \n of 27 (1.94%)"[label="  2", penwidth=1];
"...length\n1 (0.07%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".AlphaLogLiklihood\n0 (0%) \n of 7 (0.5%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".AlphaLogLiklihood\n0 (0%) \n of 7 (0.5%)" -> ".NumberOfObservationsInEachCluster\n27 (1.94%) \n of 715 (51.33%)"[label="  3", penwidth=1];
".AlphaLogLiklihood\n0 (0%) \n of 7 (0.5%)" -> "sapply\n0 (0%) \n of 4 (0.29%)"[label="  4", penwidth=1];
".BivarUpdateClusterIdentifier\n186 (13.35%) \n of 1148 (82.41%)"[shape=box,style=filled,color=black,fillcolor="#FF3B00"fontsize=29.2301214503122];
".BivarUpdateClusterIdentifier\n186 (13.35%) \n of 1148 (82.41%)" -> ".LogMarginalNormalGamma\n35 (2.51%) \n of 36 (2.58%)"[label="  36", penwidth=2];
".BivarUpdateClusterIdentifier\n186 (13.35%) \n of 1148 (82.41%)" -> ".NumberOfObservationsInEachCluster\n27 (1.94%) \n of 715 (51.33%)"[label="  712", penwidth=3];
".BivarUpdateClusterIdentifier\n186 (13.35%) \n of 1148 (82.41%)" -> "compiler:::tryCmpfun\n0 (0%) \n of 5 (0.36%)"[label="  3", penwidth=1];
".BivarUpdateClusterIdentifier\n186 (13.35%) \n of 1148 (82.41%)" -> "length\n27 (1.94%) \n of 27 (1.94%)"[label="  3", penwidth=1];
".BivarUpdateClusterIdentifier\n186 (13.35%) \n of 1148 (82.41%)" -> "list\n9 (0.65%) \n of 9 (0.65%)"[label="  9", penwidth=1];
".BivarUpdateClusterIdentifier\n186 (13.35%) \n of 1148 (82.41%)" -> "sample\n37 (2.66%) \n of 160 (11.49%)"[label="  160", penwidth=2];
".BivarUpdateClusterIdentifier\n186 (13.35%) \n of 1148 (82.41%)" -> "stats::dnorm\n34 (2.44%) \n of 34 (2.44%)"[label="  28", penwidth=2];
".BivarUpdateClusterIdentifier\n186 (13.35%) \n of 1148 (82.41%)" -> "sum\n30 (2.15%) \n of 30 (2.15%)"[label="  11", penwidth=1];
".Call\n95 (6.82%) \n of 95 (6.82%)"[shape=box,style=filled,color=black,fillcolor="#FFFFBD"fontsize=20.892103771521];
".LogMarginalNormalGamma\n35 (2.51%) \n of 36 (2.58%)"[shape=box,style=filled,color=black,fillcolor="#FFFFE6"fontsize=14];
".LogMarginalNormalGamma\n35 (2.51%) \n of 36 (2.58%)" -> "compiler:::tryCmpfun\n0 (0%) \n of 5 (0.36%)"[label="  1", penwidth=1];
".NumberOfObservationsInEachCluster\n27 (1.94%) \n of 715 (51.33%)"[shape=box,style=filled,color=black,fillcolor="#FFA500"fontsize=14];
".NumberOfObservationsInEachCluster\n27 (1.94%) \n of 715 (51.33%)" -> "apply\n333 (23.91%) \n of 695 (49.89%)"[label="  680", penwidth=3];
".NumberOfObservationsInEachCluster\n27 (1.94%) \n of 715 (51.33%)" -> "max\n21 (1.51%) \n of 21 (1.51%)"[label="  8", penwidth=1];
".UpdateAlphaGammaPrior\n1 (0.07%) \n of 9 (0.65%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".UpdateAlphaGammaPrior\n1 (0.07%) \n of 9 (0.65%)" -> ".AlphaLogLiklihood\n0 (0%) \n of 7 (0.5%)"[label="  7", penwidth=1];
".UpdateAlphaGammaPrior\n1 (0.07%) \n of 9 (0.65%)" -> "compiler:::tryCmpfun\n0 (0%) \n of 5 (0.36%)"[label="  1", penwidth=1];
".UpdatePhiTau\n1 (0.07%) \n of 4 (0.29%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".UpdatePhiTau\n1 (0.07%) \n of 4 (0.29%)" -> "mean\n2 (0.14%) \n of 2 (0.14%)"[label="  2", penwidth=1];
".UpdatePhiTau\n1 (0.07%) \n of 4 (0.29%)" -> "stats::rgamma\n1 (0.07%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"/\n1 (0.07%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"<Anonymous>\n0 (0%) \n of 8 (0.57%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"<Anonymous>\n0 (0%) \n of 8 (0.57%)" -> "/\n1 (0.07%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"<Anonymous>\n0 (0%) \n of 8 (0.57%)" -> "$\n1 (0.07%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"<Anonymous>\n0 (0%) \n of 8 (0.57%)" -> "stats::dnorm\n34 (2.44%) \n of 34 (2.44%)"[label="  6", penwidth=1];
"==\n57 (4.09%) \n of 57 (4.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFD1"fontsize=16.1789987329253];
"$\n1 (0.07%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"all\n5 (0.36%) \n of 5 (0.36%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"any\n7 (0.5%) \n of 7 (0.5%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"anyNA\n5 (0.36%) \n of 5 (0.36%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"aperm\n34 (2.44%) \n of 50 (3.59%)"[shape=box,style=filled,color=black,fillcolor="#FFFFDB"fontsize=14];
"aperm\n34 (2.44%) \n of 50 (3.59%)" -> "aperm.default\n14 (1.01%) \n of 16 (1.15%)"[label="  16", penwidth=1];
"aperm.default\n14 (1.01%) \n of 16 (1.15%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
"aperm.default\n14 (1.01%) \n of 16 (1.15%)" -> "c\n13 (0.93%) \n of 13 (0.93%)"[label="  2", penwidth=1];
"apply\n333 (23.91%) \n of 695 (49.89%)"[shape=box,style=filled,color=black,fillcolor="#FFAC00"fontsize=39.1182821708725];
"apply\n333 (23.91%) \n of 695 (49.89%)" -> "any\n7 (0.5%) \n of 7 (0.5%)"[label="  7", penwidth=1];
"apply\n333 (23.91%) \n of 695 (49.89%)" -> "anyNA\n5 (0.36%) \n of 5 (0.36%)"[label="  3", penwidth=1];
"apply\n333 (23.91%) \n of 695 (49.89%)" -> "aperm\n34 (2.44%) \n of 50 (3.59%)"[label="  50", penwidth=2];
"apply\n333 (23.91%) \n of 695 (49.89%)" -> "c\n13 (0.93%) \n of 13 (0.93%)"[label="  7", penwidth=1];
"apply\n333 (23.91%) \n of 695 (49.89%)" -> "FUN\n13 (0.93%) \n of 89 (6.39%)"[label="  89", penwidth=2];
"apply\n333 (23.91%) \n of 695 (49.89%)" -> "is.recursive\n3 (0.22%) \n of 3 (0.22%)"[label="  3", penwidth=1];
"apply\n333 (23.91%) \n of 695 (49.89%)" -> "isTRUE\n6 (0.43%) \n of 9 (0.65%)"[label="  9", penwidth=1];
"apply\n333 (23.91%) \n of 695 (49.89%)" -> "length\n27 (1.94%) \n of 27 (1.94%)"[label="  14", penwidth=1];
"apply\n333 (23.91%) \n of 695 (49.89%)" -> "lengths\n10 (0.72%) \n of 10 (0.72%)"[label="  9", penwidth=1];
"apply\n333 (23.91%) \n of 695 (49.89%)" -> "match.fun\n11 (0.79%) \n of 11 (0.79%)"[label="  11", penwidth=1];
"apply\n333 (23.91%) \n of 695 (49.89%)" -> "prod\n12 (0.86%) \n of 12 (0.86%)"[label="  12", penwidth=1];
"apply\n333 (23.91%) \n of 695 (49.89%)" -> "t\n44 (3.16%) \n of 134 (9.62%)"[label="  134", penwidth=2];
"apply\n333 (23.91%) \n of 695 (49.89%)" -> "unlist\n18 (1.29%) \n of 18 (1.29%)"[label="  14", penwidth=1];
"array\n13 (0.93%) \n of 22 (1.58%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
"array\n13 (0.93%) \n of 22 (1.58%)" -> "c\n13 (0.93%) \n of 13 (0.93%)"[label="  4", penwidth=1];
"array\n13 (0.93%) \n of 22 (1.58%)" -> "is.atomic\n3 (0.22%) \n of 3 (0.22%)"[label="  3", penwidth=1];
"array\n13 (0.93%) \n of 22 (1.58%)" -> "length\n27 (1.94%) \n of 27 (1.94%)"[label="  2", penwidth=1];
"as.double\n2 (0.14%) \n of 2 (0.14%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"as.integer\n1 (0.07%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"as.list\n1 (0.07%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"as.matrix\n39 (2.8%) \n of 80 (5.74%)"[shape=box,style=filled,color=black,fillcolor="#FFFFC7"fontsize=14];
"as.matrix\n39 (2.8%) \n of 80 (5.74%)" -> ":\n4 (0.29%) \n of 4 (0.29%)"[label="  3", penwidth=1];
"as.matrix\n39 (2.8%) \n of 80 (5.74%)" -> "as.matrix.default\n13 (0.93%) \n of 38 (2.73%)"[label="  38", penwidth=2];
"as.matrix.default\n13 (0.93%) \n of 38 (2.73%)"[shape=box,style=filled,color=black,fillcolor="#FFFFE6"fontsize=14];
"as.matrix.default\n13 (0.93%) \n of 38 (2.73%)" -> "array\n13 (0.93%) \n of 22 (1.58%)"[label="  22", penwidth=2];
"as.matrix.default\n13 (0.93%) \n of 38 (2.73%)" -> "is.matrix\n3 (0.22%) \n of 3 (0.22%)"[label="  3", penwidth=1];
"c\n13 (0.93%) \n of 13 (0.93%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cat\n1 (0.07%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cb$code\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cb$code\n0 (0%) \n of 1 (0.07%)" -> "as.integer\n1 (0.07%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"cb$putconst\n0 (0%) \n of 2 (0.14%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cb$putconst\n0 (0%) \n of 2 (0.14%)" -> "genCode\n0 (0%) \n of 4 (0.29%)"[label="  2", penwidth=1];
"close\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"close\n0 (0%) \n of 1 (0.07%)" -> "close.txtProgressBar\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"close.txtProgressBar\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"close.txtProgressBar\n0 (0%) \n of 1 (0.07%)" -> "con$kill\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"cmp\n0 (0%) \n of 3 (0.22%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmp\n0 (0%) \n of 3 (0.22%)" -> "cmpCall\n0 (0%) \n of 3 (0.22%)"[label="  3", penwidth=1];
"cmp\n0 (0%) \n of 3 (0.22%)" -> "cmpSym\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"cmp\n0 (0%) \n of 3 (0.22%)" -> "constantFold\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"cmpCall\n0 (0%) \n of 3 (0.22%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpCall\n0 (0%) \n of 3 (0.22%)" -> "cmpCallExprFun\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"cmpCall\n0 (0%) \n of 3 (0.22%)" -> "cmpCallSymFun\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"cmpCall\n0 (0%) \n of 3 (0.22%)" -> "tryInline\n0 (0%) \n of 3 (0.22%)"[label="  3", penwidth=1];
"cmpCallArgs\n0 (0%) \n of 2 (0.14%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpCallArgs\n0 (0%) \n of 2 (0.14%)" -> "cb$putconst\n0 (0%) \n of 2 (0.14%)"[label="  2", penwidth=1];
"cmpCallExprFun\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpCallExprFun\n0 (0%) \n of 1 (0.07%)" -> "cmpCallArgs\n0 (0%) \n of 2 (0.14%)"[label="  1", penwidth=1];
"cmpCallSymFun\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpCallSymFun\n0 (0%) \n of 1 (0.07%)" -> "cmpCallArgs\n0 (0%) \n of 2 (0.14%)"[label="  1", penwidth=1];
"cmpfun\n0 (0%) \n of 5 (0.36%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpfun\n0 (0%) \n of 5 (0.36%)" -> "genCode\n0 (0%) \n of 4 (0.29%)"[label="  4", penwidth=1];
"cmpfun\n0 (0%) \n of 5 (0.36%)" -> "mayCallBrowser\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"cmpPrim1\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpPrim1\n0 (0%) \n of 1 (0.07%)" -> "cmp\n0 (0%) \n of 3 (0.22%)"[label="  1", penwidth=1];
"cmpPrim2\n0 (0%) \n of 3 (0.22%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpPrim2\n0 (0%) \n of 3 (0.22%)" -> "cmp\n0 (0%) \n of 3 (0.22%)"[label="  3", penwidth=1];
"cmpSym\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpSym\n0 (0%) \n of 1 (0.07%)" -> "is.ddsym\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"cmpSymbolAssign\n0 (0%) \n of 3 (0.22%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpSymbolAssign\n0 (0%) \n of 3 (0.22%)" -> "cmp\n0 (0%) \n of 3 (0.22%)"[label="  3", penwidth=1];
"codeBufCode\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"codeBufCode\n0 (0%) \n of 1 (0.07%)" -> "cb$code\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"compiler:::tryCmpfun\n0 (0%) \n of 5 (0.36%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"compiler:::tryCmpfun\n0 (0%) \n of 5 (0.36%)" -> "tryCatch\n0 (0%) \n of 5 (0.36%)"[label="  5", penwidth=1];
"con$kill\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"con$kill\n0 (0%) \n of 1 (0.07%)" -> "cat\n1 (0.07%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"constantFold\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"constantFold\n0 (0%) \n of 1 (0.07%)" -> "constantFoldCall\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"constantFoldCall\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"constantFoldCall\n0 (0%) \n of 1 (0.07%)" -> "constantFold\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"constantFoldCall\n0 (0%) \n of 1 (0.07%)" -> "getFoldFun\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"doTryCatch\n0 (0%) \n of 5 (0.36%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"doTryCatch\n0 (0%) \n of 5 (0.36%)" -> "cmpfun\n0 (0%) \n of 5 (0.36%)"[label="  5", penwidth=1];
"eval\n0 (0%) \n of 1393 (100%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"eval\n0 (0%) \n of 1393 (100%)" -> "eval\n0 (0%) \n of 1393 (100%)"[label="  1393", penwidth=3];
"eval\n0 (0%) \n of 1393 (100%)" -> "profile_walker\n0 (0%) \n of 1393 (100%)"[label="  1393", penwidth=3];
"exists\n1 (0.07%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"findCenvVar\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"findCenvVar\n0 (0%) \n of 1 (0.07%)" -> "exists\n1 (0.07%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"FUN\n13 (0.93%) \n of 89 (6.39%)"[shape=box,style=filled,color=black,fillcolor="#FFFFBD"fontsize=14];
"FUN\n13 (0.93%) \n of 89 (6.39%)" -> "==\n57 (4.09%) \n of 57 (4.09%)"[label="  57", penwidth=2];
"FUN\n13 (0.93%) \n of 89 (6.39%)" -> "sum\n30 (2.15%) \n of 30 (2.15%)"[label="  19", penwidth=1];
"genCode\n0 (0%) \n of 4 (0.29%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"genCode\n0 (0%) \n of 4 (0.29%)" -> "cmp\n0 (0%) \n of 3 (0.22%)"[label="  3", penwidth=1];
"genCode\n0 (0%) \n of 4 (0.29%)" -> "codeBufCode\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"getFoldFun\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"getFoldFun\n0 (0%) \n of 1 (0.07%)" -> "isBaseVar\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"getInlineInfo\n0 (0%) \n of 2 (0.14%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"getInlineInfo\n0 (0%) \n of 2 (0.14%)" -> "findCenvVar\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"getInlineInfo\n0 (0%) \n of 2 (0.14%)" -> "nsName\n1 (0.07%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"grep\n1 (0.07%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"h\n0 (0%) \n of 3 (0.22%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"h\n0 (0%) \n of 3 (0.22%)" -> "cmp\n0 (0%) \n of 3 (0.22%)"[label="  3", penwidth=1];
"h\n0 (0%) \n of 3 (0.22%)" -> "cmpPrim1\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"h\n0 (0%) \n of 3 (0.22%)" -> "cmpPrim2\n0 (0%) \n of 3 (0.22%)"[label="  3", penwidth=1];
"h\n0 (0%) \n of 3 (0.22%)" -> "cmpSymbolAssign\n0 (0%) \n of 3 (0.22%)"[label="  3", penwidth=1];
"InterpolateCalibrationCurve\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"InterpolateCalibrationCurve\n0 (0%) \n of 1 (0.07%)" -> "stats::approx\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"is.atomic\n3 (0.22%) \n of 3 (0.22%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"is.ddsym\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"is.ddsym\n0 (0%) \n of 1 (0.07%)" -> "grep\n1 (0.07%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"is.matrix\n3 (0.22%) \n of 3 (0.22%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"is.na\n2 (0.14%) \n of 2 (0.14%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"is.recursive\n3 (0.22%) \n of 3 (0.22%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"isBaseVar\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"isBaseVar\n0 (0%) \n of 1 (0.07%)" -> "getInlineInfo\n0 (0%) \n of 2 (0.14%)"[label="  1", penwidth=1];
"isTRUE\n6 (0.43%) \n of 9 (0.65%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"isTRUE\n6 (0.43%) \n of 9 (0.65%)" -> "is.na\n2 (0.14%) \n of 2 (0.14%)"[label="  2", penwidth=1];
"isTRUE\n6 (0.43%) \n of 9 (0.65%)" -> "length\n27 (1.94%) \n of 27 (1.94%)"[label="  1", penwidth=1];
"lapply\n1 (0.07%) \n of 2 (0.14%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"lapply\n1 (0.07%) \n of 2 (0.14%)" -> "pmax\n1 (0.07%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"length\n27 (1.94%) \n of 27 (1.94%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
"lengths\n10 (0.72%) \n of 10 (0.72%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"list\n9 (0.65%) \n of 9 (0.65%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"mapply\n1 (0.07%) \n of 13 (0.93%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"mapply\n1 (0.07%) \n of 13 (0.93%)" -> "<Anonymous>\n0 (0%) \n of 8 (0.57%)"[label="  8", penwidth=1];
"mapply\n1 (0.07%) \n of 13 (0.93%)" -> "simplify2array\n1 (0.07%) \n of 6 (0.43%)"[label="  4", penwidth=1];
"match.fun\n11 (0.79%) \n of 11 (0.79%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"max\n21 (1.51%) \n of 21 (1.51%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
"mayCallBrowser\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"mayCallBrowser\n0 (0%) \n of 1 (0.07%)" -> "mayCallBrowserList\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"mayCallBrowserList\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"mayCallBrowserList\n0 (0%) \n of 1 (0.07%)" -> "as.list\n1 (0.07%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"mayCallBrowserList\n0 (0%) \n of 1 (0.07%)" -> "mayCallBrowser\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"mean\n2 (0.14%) \n of 2 (0.14%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"nsName\n1 (0.07%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"pmax\n1 (0.07%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"PolyaUrnBivarDirichlet\n88 (6.32%) \n of 1393 (100%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=20.1116881439625];
"PolyaUrnBivarDirichlet\n88 (6.32%) \n of 1393 (100%)" -> ":\n4 (0.29%) \n of 4 (0.29%)"[label="  1", penwidth=1];
"PolyaUrnBivarDirichlet\n88 (6.32%) \n of 1393 (100%)" -> "!=\n2 (0.14%) \n of 2 (0.14%)"[label="  2", penwidth=1];
"PolyaUrnBivarDirichlet\n88 (6.32%) \n of 1393 (100%)" -> ".BivarUpdateClusterIdentifier\n186 (13.35%) \n of 1148 (82.41%)"[label="  1148", penwidth=3];
"PolyaUrnBivarDirichlet\n88 (6.32%) \n of 1393 (100%)" -> ".UpdateAlphaGammaPrior\n1 (0.07%) \n of 9 (0.65%)"[label="  9", penwidth=1];
"PolyaUrnBivarDirichlet\n88 (6.32%) \n of 1393 (100%)" -> ".UpdatePhiTau\n1 (0.07%) \n of 4 (0.29%)"[label="  4", penwidth=1];
"PolyaUrnBivarDirichlet\n88 (6.32%) \n of 1393 (100%)" -> "apply\n333 (23.91%) \n of 695 (49.89%)"[label="  15", penwidth=1];
"PolyaUrnBivarDirichlet\n88 (6.32%) \n of 1393 (100%)" -> "close\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"PolyaUrnBivarDirichlet\n88 (6.32%) \n of 1393 (100%)" -> "InterpolateCalibrationCurve\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"PolyaUrnBivarDirichlet\n88 (6.32%) \n of 1393 (100%)" -> "length\n27 (1.94%) \n of 27 (1.94%)"[label="  2", penwidth=1];
"PolyaUrnBivarDirichlet\n88 (6.32%) \n of 1393 (100%)" -> "mapply\n1 (0.07%) \n of 13 (0.93%)"[label="  13", penwidth=1];
"PolyaUrnBivarDirichlet\n88 (6.32%) \n of 1393 (100%)" -> "max\n21 (1.51%) \n of 21 (1.51%)"[label="  13", penwidth=1];
"PolyaUrnBivarDirichlet\n88 (6.32%) \n of 1393 (100%)" -> "Update_calendar_ages_cpp\n0 (0%) \n of 96 (6.89%)"[label="  96", penwidth=2];
"prod\n12 (0.86%) \n of 12 (0.86%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"profile_walker\n0 (0%) \n of 1393 (100%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"profile_walker\n0 (0%) \n of 1393 (100%)" -> "PolyaUrnBivarDirichlet\n88 (6.32%) \n of 1393 (100%)"[label="  1393", penwidth=3];
"regularize.values\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"regularize.values\n0 (0%) \n of 1 (0.07%)" -> "xy.coords\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"sample\n37 (2.66%) \n of 160 (11.49%)"[shape=box,style=filled,color=black,fillcolor="#FFFF8A"fontsize=14];
"sample\n37 (2.66%) \n of 160 (11.49%)" -> "length\n27 (1.94%) \n of 27 (1.94%)"[label="  3", penwidth=1];
"sample\n37 (2.66%) \n of 160 (11.49%)" -> "sample.int\n58 (4.16%) \n of 120 (8.61%)"[label="  120", penwidth=2];
"sample.int\n58 (4.16%) \n of 120 (8.61%)"[shape=box,style=filled,color=black,fillcolor="#FFFFA8"fontsize=16.3168624434969];
"sample.int\n58 (4.16%) \n of 120 (8.61%)" -> "stopifnot\n43 (3.09%) \n of 62 (4.45%)"[label="  62", penwidth=2];
"sapply\n0 (0%) \n of 4 (0.29%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"sapply\n0 (0%) \n of 4 (0.29%)" -> "lapply\n1 (0.07%) \n of 2 (0.14%)"[label="  2", penwidth=1];
"sapply\n0 (0%) \n of 4 (0.29%)" -> "simplify2array\n1 (0.07%) \n of 6 (0.43%)"[label="  2", penwidth=1];
"simplify2array\n1 (0.07%) \n of 6 (0.43%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"simplify2array\n1 (0.07%) \n of 6 (0.43%)" -> "unique\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"simplify2array\n1 (0.07%) \n of 6 (0.43%)" -> "unlist\n18 (1.29%) \n of 18 (1.29%)"[label="  4", penwidth=1];
"source\n0 (0%) \n of 1393 (100%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"source\n0 (0%) \n of 1393 (100%)" -> "withVisible\n0 (0%) \n of 1393 (100%)"[label="  1393", penwidth=3];
"stats::approx\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"stats::approx\n0 (0%) \n of 1 (0.07%)" -> "regularize.values\n0 (0%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"stats::dnorm\n34 (2.44%) \n of 34 (2.44%)"[shape=box,style=filled,color=black,fillcolor="#FFFFE6"fontsize=14];
"stats::rgamma\n1 (0.07%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"stopifnot\n43 (3.09%) \n of 62 (4.45%)"[shape=box,style=filled,color=black,fillcolor="#FFFFD1"fontsize=14.0627166649976];
"stopifnot\n43 (3.09%) \n of 62 (4.45%)" -> "...elt\n9 (0.65%) \n of 11 (0.79%)"[label="  11", penwidth=1];
"stopifnot\n43 (3.09%) \n of 62 (4.45%)" -> "...length\n1 (0.07%) \n of 1 (0.07%)"[label="  1", penwidth=1];
"stopifnot\n43 (3.09%) \n of 62 (4.45%)" -> "all\n5 (0.36%) \n of 5 (0.36%)"[label="  5", penwidth=1];
"stopifnot\n43 (3.09%) \n of 62 (4.45%)" -> "anyNA\n5 (0.36%) \n of 5 (0.36%)"[label="  2", penwidth=1];
"sum\n30 (2.15%) \n of 30 (2.15%)"[shape=box,style=filled,color=black,fillcolor="#FFFFE6"fontsize=14];
"t\n44 (3.16%) \n of 134 (9.62%)"[shape=box,style=filled,color=black,fillcolor="#FFFF9E"fontsize=14.2211110677049];
"t\n44 (3.16%) \n of 134 (9.62%)" -> "as.matrix\n39 (2.8%) \n of 80 (5.74%)"[label="  80", penwidth=2];
"t\n44 (3.16%) \n of 134 (9.62%)" -> "t.default\n10 (0.72%) \n of 10 (0.72%)"[label="  10", penwidth=1];
"t.default\n10 (0.72%) \n of 10 (0.72%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryCatch\n0 (0%) \n of 5 (0.36%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryCatch\n0 (0%) \n of 5 (0.36%)" -> "tryCatchList\n0 (0%) \n of 5 (0.36%)"[label="  5", penwidth=1];
"tryCatchList\n0 (0%) \n of 5 (0.36%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryCatchList\n0 (0%) \n of 5 (0.36%)" -> "tryCatchOne\n0 (0%) \n of 5 (0.36%)"[label="  5", penwidth=1];
"tryCatchOne\n0 (0%) \n of 5 (0.36%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryCatchOne\n0 (0%) \n of 5 (0.36%)" -> "doTryCatch\n0 (0%) \n of 5 (0.36%)"[label="  5", penwidth=1];
"tryInline\n0 (0%) \n of 3 (0.22%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryInline\n0 (0%) \n of 3 (0.22%)" -> "getInlineInfo\n0 (0%) \n of 2 (0.14%)"[label="  1", penwidth=1];
"tryInline\n0 (0%) \n of 3 (0.22%)" -> "h\n0 (0%) \n of 3 (0.22%)"[label="  3", penwidth=1];
"unique\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"unique\n0 (0%) \n of 1 (0.07%)" -> "lengths\n10 (0.72%) \n of 10 (0.72%)"[label="  1", penwidth=1];
"unlist\n18 (1.29%) \n of 18 (1.29%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
"Update_calendar_ages_cpp\n0 (0%) \n of 96 (6.89%)"[shape=box,style=filled,color=black,fillcolor="#FFFFBD"fontsize=14];
"Update_calendar_ages_cpp\n0 (0%) \n of 96 (6.89%)" -> ".Call\n95 (6.82%) \n of 95 (6.82%)"[label="  95", penwidth=2];
"Update_calendar_ages_cpp\n0 (0%) \n of 96 (6.89%)" -> "as.double\n2 (0.14%) \n of 2 (0.14%)"[label="  1", penwidth=1];
"withVisible\n0 (0%) \n of 1393 (100%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"withVisible\n0 (0%) \n of 1393 (100%)" -> "eval\n0 (0%) \n of 1393 (100%)"[label="  1393", penwidth=3];
"xy.coords\n0 (0%) \n of 1 (0.07%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"xy.coords\n0 (0%) \n of 1 (0.07%)" -> "as.double\n2 (0.14%) \n of 2 (0.14%)"[label="  1", penwidth=1];
}