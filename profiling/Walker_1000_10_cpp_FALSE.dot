digraph xyz {
rankdir=TB;
"-\n7 (0.33%) \n of 7 (0.33%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"...elt\n5 (0.24%) \n of 6 (0.28%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"...elt\n5 (0.24%) \n of 6 (0.28%)" -> "length\n2 (0.09%) \n of 2 (0.09%)"[label="  1", penwidth=1];
".DPWalkerUpdate\n103 (4.87%) \n of 345 (16.3%)"[shape=box,style=filled,color=black,fillcolor="#FFFF57"fontsize=17.6544611925711];
".DPWalkerUpdate\n103 (4.87%) \n of 345 (16.3%)" -> "-\n7 (0.33%) \n of 7 (0.33%)"[label="  2", penwidth=1];
".DPWalkerUpdate\n103 (4.87%) \n of 345 (16.3%)" -> ".UpdatePhiTau\n15 (0.71%) \n of 31 (1.47%)"[label="  31", penwidth=2];
".DPWalkerUpdate\n103 (4.87%) \n of 345 (16.3%)" -> "c\n4 (0.19%) \n of 4 (0.19%)"[label="  1", penwidth=1];
".DPWalkerUpdate\n103 (4.87%) \n of 345 (16.3%)" -> "cumprod\n4 (0.19%) \n of 4 (0.19%)"[label="  4", penwidth=1];
".DPWalkerUpdate\n103 (4.87%) \n of 345 (16.3%)" -> "is.na\n4 (0.19%) \n of 4 (0.19%)"[label="  1", penwidth=1];
".DPWalkerUpdate\n103 (4.87%) \n of 345 (16.3%)" -> "sample.int\n57 (2.69%) \n of 114 (5.39%)"[label="  114", penwidth=2];
".DPWalkerUpdate\n103 (4.87%) \n of 345 (16.3%)" -> "stats::dnorm\n269 (12.71%) \n of 314 (14.84%)"[label="  27", penwidth=2];
".DPWalkerUpdate\n103 (4.87%) \n of 345 (16.3%)" -> "stats::rgamma\n2 (0.09%) \n of 2 (0.09%)"[label="  1", penwidth=1];
".DPWalkerUpdate\n103 (4.87%) \n of 345 (16.3%)" -> "stats::runif\n186 (8.79%) \n of 186 (8.79%)"[label="  2", penwidth=1];
".DPWalkerUpdate\n103 (4.87%) \n of 345 (16.3%)" -> "which\n43 (2.03%) \n of 59 (2.79%)"[label="  59", penwidth=2];
".FindSliceInterval\n142 (6.71%) \n of 455 (21.5%)"[shape=box,style=filled,color=black,fillcolor="#FFFF24"fontsize=20.7229341551818];
".FindSliceInterval\n142 (6.71%) \n of 455 (21.5%)" -> "-\n7 (0.33%) \n of 7 (0.33%)"[label="  1", penwidth=1];
".FindSliceInterval\n142 (6.71%) \n of 455 (21.5%)" -> ".ThetaLogLikelihood\n615 (29.06%) \n of 916 (43.29%)"[label="  248", penwidth=2];
".FindSliceInterval\n142 (6.71%) \n of 455 (21.5%)" -> "(\n2 (0.09%) \n of 2 (0.09%)"[label="  1", penwidth=1];
".FindSliceInterval\n142 (6.71%) \n of 455 (21.5%)" -> "*\n3 (0.14%) \n of 3 (0.14%)"[label="  2", penwidth=1];
".FindSliceInterval\n142 (6.71%) \n of 455 (21.5%)" -> "&\n5 (0.24%) \n of 5 (0.24%)"[label="  5", penwidth=1];
".FindSliceInterval\n142 (6.71%) \n of 455 (21.5%)" -> "<\n9 (0.43%) \n of 9 (0.43%)"[label="  2", penwidth=1];
".FindSliceInterval\n142 (6.71%) \n of 455 (21.5%)" -> ">\n18 (0.85%) \n of 18 (0.85%)"[label="  4", penwidth=1];
".FindSliceInterval\n142 (6.71%) \n of 455 (21.5%)" -> "c\n4 (0.19%) \n of 4 (0.19%)"[label="  3", penwidth=1];
".FindSliceInterval\n142 (6.71%) \n of 455 (21.5%)" -> "floor\n12 (0.57%) \n of 12 (0.57%)"[label="  1", penwidth=1];
".FindSliceInterval\n142 (6.71%) \n of 455 (21.5%)" -> "stats::runif\n186 (8.79%) \n of 186 (8.79%)"[label="  46", penwidth=2];
".SampleFromSliceInterval\n296 (13.99%) \n of 986 (46.6%)"[shape=box,style=filled,color=black,fillcolor="#FFB700"fontsize=29.9225667348241];
".SampleFromSliceInterval\n296 (13.99%) \n of 986 (46.6%)" -> "-\n7 (0.33%) \n of 7 (0.33%)"[label="  4", penwidth=1];
".SampleFromSliceInterval\n296 (13.99%) \n of 986 (46.6%)" -> ".ThetaLogLikelihood\n615 (29.06%) \n of 916 (43.29%)"[label="  540", penwidth=3];
".SampleFromSliceInterval\n296 (13.99%) \n of 986 (46.6%)" -> "(\n2 (0.09%) \n of 2 (0.09%)"[label="  1", penwidth=1];
".SampleFromSliceInterval\n296 (13.99%) \n of 986 (46.6%)" -> "+\n3 (0.14%) \n of 3 (0.14%)"[label="  2", penwidth=1];
".SampleFromSliceInterval\n296 (13.99%) \n of 986 (46.6%)" -> "<\n9 (0.43%) \n of 9 (0.43%)"[label="  5", penwidth=1];
".SampleFromSliceInterval\n296 (13.99%) \n of 986 (46.6%)" -> "stats::runif\n186 (8.79%) \n of 186 (8.79%)"[label="  138", penwidth=2];
".SliceSample\n98 (4.63%) \n of 1698 (80.25%)"[shape=box,style=filled,color=black,fillcolor="#FF4100"fontsize=17.21394783308];
".SliceSample\n98 (4.63%) \n of 1698 (80.25%)" -> ".FindSliceInterval\n142 (6.71%) \n of 455 (21.5%)"[label="  455", penwidth=3];
".SliceSample\n98 (4.63%) \n of 1698 (80.25%)" -> ".SampleFromSliceInterval\n296 (13.99%) \n of 986 (46.6%)"[label="  986", penwidth=3];
".SliceSample\n98 (4.63%) \n of 1698 (80.25%)" -> ".ThetaLogLikelihood\n615 (29.06%) \n of 916 (43.29%)"[label="  128", penwidth=2];
".SliceSample\n98 (4.63%) \n of 1698 (80.25%)" -> "stats::rexp\n31 (1.47%) \n of 31 (1.47%)"[label="  31", penwidth=2];
".ThetaLogLikelihood\n615 (29.06%) \n of 916 (43.29%)"[shape=box,style=filled,color=black,fillcolor="#FFC100"fontsize=43.1258623102194];
".ThetaLogLikelihood\n615 (29.06%) \n of 916 (43.29%)" -> "<\n9 (0.43%) \n of 9 (0.43%)"[label="  2", penwidth=1];
".ThetaLogLikelihood\n615 (29.06%) \n of 916 (43.29%)" -> ">\n18 (0.85%) \n of 18 (0.85%)"[label="  5", penwidth=1];
".ThetaLogLikelihood\n615 (29.06%) \n of 916 (43.29%)" -> "floor\n12 (0.57%) \n of 12 (0.57%)"[label="  11", penwidth=1];
".ThetaLogLikelihood\n615 (29.06%) \n of 916 (43.29%)" -> "stats::dnorm\n269 (12.71%) \n of 314 (14.84%)"[label="  283", penwidth=2];
".UpdatePhiTau\n15 (0.71%) \n of 31 (1.47%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
".UpdatePhiTau\n15 (0.71%) \n of 31 (1.47%)" -> "*\n3 (0.14%) \n of 3 (0.14%)"[label="  1", penwidth=1];
".UpdatePhiTau\n15 (0.71%) \n of 31 (1.47%)" -> "length\n2 (0.09%) \n of 2 (0.09%)"[label="  1", penwidth=1];
".UpdatePhiTau\n15 (0.71%) \n of 31 (1.47%)" -> "list\n1 (0.05%) \n of 1 (0.05%)"[label="  1", penwidth=1];
".UpdatePhiTau\n15 (0.71%) \n of 31 (1.47%)" -> "mean\n7 (0.33%) \n of 10 (0.47%)"[label="  10", penwidth=1];
".UpdatePhiTau\n15 (0.71%) \n of 31 (1.47%)" -> "stats::rgamma\n2 (0.09%) \n of 2 (0.09%)"[label="  1", penwidth=1];
".UpdatePhiTau\n15 (0.71%) \n of 31 (1.47%)" -> "stats::rnorm\n2 (0.09%) \n of 2 (0.09%)"[label="  2", penwidth=1];
".WalkerAlphaLogLiklihood\n1 (0.05%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".WalkerUpdateAlpha\n1 (0.05%) \n of 3 (0.14%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".WalkerUpdateAlpha\n1 (0.05%) \n of 3 (0.14%)" -> ".WalkerAlphaLogLiklihood\n1 (0.05%) \n of 1 (0.05%)"[label="  1", penwidth=1];
".WalkerUpdateAlpha\n1 (0.05%) \n of 3 (0.14%)" -> "stats::dgamma\n1 (0.05%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"(\n2 (0.09%) \n of 2 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"*\n3 (0.14%) \n of 3 (0.14%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"/\n5 (0.24%) \n of 5 (0.24%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"&\n5 (0.24%) \n of 5 (0.24%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"^\n36 (1.7%) \n of 36 (1.7%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
"+\n3 (0.14%) \n of 3 (0.14%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"<\n9 (0.43%) \n of 9 (0.43%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"<Anonymous>\n0 (0%) \n of 7 (0.33%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"<Anonymous>\n0 (0%) \n of 7 (0.33%)" -> "/\n5 (0.24%) \n of 5 (0.24%)"[label="  2", penwidth=1];
"<Anonymous>\n0 (0%) \n of 7 (0.33%)" -> "stats::dnorm\n269 (12.71%) \n of 314 (14.84%)"[label="  4", penwidth=1];
"<Anonymous>\n0 (0%) \n of 7 (0.33%)" -> "sum\n1 (0.05%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"==\n1 (0.05%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
">\n18 (0.85%) \n of 18 (0.85%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"all\n2 (0.09%) \n of 2 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"anyNA\n2 (0.09%) \n of 2 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"aperm\n0 (0%) \n of 2 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"aperm\n0 (0%) \n of 2 (0.09%)" -> "aperm.default\n2 (0.09%) \n of 2 (0.09%)"[label="  2", penwidth=1];
"aperm.default\n2 (0.09%) \n of 2 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"apply\n2 (0.09%) \n of 4 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"apply\n2 (0.09%) \n of 4 (0.19%)" -> "aperm\n0 (0%) \n of 2 (0.09%)"[label="  2", penwidth=1];
"c\n4 (0.19%) \n of 4 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cat\n2 (0.09%) \n of 2 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cb$putcode\n0 (0%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cb$putcode\n0 (0%) \n of 1 (0.05%)" -> "putconst\n1 (0.05%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"cb$putconst\n0 (0%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cb$putconst\n0 (0%) \n of 1 (0.05%)" -> "genCode\n0 (0%) \n of 4 (0.19%)"[label="  1", penwidth=1];
"close\n0 (0%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"close\n0 (0%) \n of 1 (0.05%)" -> "close.txtProgressBar\n0 (0%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"close.txtProgressBar\n0 (0%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"close.txtProgressBar\n0 (0%) \n of 1 (0.05%)" -> "con$kill\n0 (0%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"cmp\n0 (0%) \n of 4 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmp\n0 (0%) \n of 4 (0.19%)" -> "cmpCall\n0 (0%) \n of 4 (0.19%)"[label="  4", penwidth=1];
"cmpCall\n0 (0%) \n of 4 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpCall\n0 (0%) \n of 4 (0.19%)" -> "cmpCallSymFun\n0 (0%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"cmpCall\n0 (0%) \n of 4 (0.19%)" -> "tryInline\n0 (0%) \n of 4 (0.19%)"[label="  4", penwidth=1];
"cmpCallArgs\n0 (0%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpCallArgs\n0 (0%) \n of 1 (0.05%)" -> "cb$putconst\n0 (0%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"cmpCallSymFun\n0 (0%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpCallSymFun\n0 (0%) \n of 1 (0.05%)" -> "cmpCallArgs\n0 (0%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"cmpComplexAssign\n0 (0%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpComplexAssign\n0 (0%) \n of 1 (0.05%)" -> "cmp\n0 (0%) \n of 4 (0.19%)"[label="  1", penwidth=1];
"cmpForBody\n0 (0%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpForBody\n0 (0%) \n of 1 (0.05%)" -> "cmp\n0 (0%) \n of 4 (0.19%)"[label="  1", penwidth=1];
"cmpfun\n0 (0%) \n of 4 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpfun\n0 (0%) \n of 4 (0.19%)" -> "genCode\n0 (0%) \n of 4 (0.19%)"[label="  4", penwidth=1];
"cmpSymbolAssign\n0 (0%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpSymbolAssign\n0 (0%) \n of 1 (0.05%)" -> "cb$putcode\n0 (0%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"compiler:::tryCmpfun\n0 (0%) \n of 4 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"compiler:::tryCmpfun\n0 (0%) \n of 4 (0.19%)" -> "tryCatch\n0 (0%) \n of 4 (0.19%)"[label="  4", penwidth=1];
"con$kill\n0 (0%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"con$kill\n0 (0%) \n of 1 (0.05%)" -> "cat\n2 (0.09%) \n of 2 (0.09%)"[label="  1", penwidth=1];
"cumprod\n4 (0.19%) \n of 4 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"doTryCatch\n0 (0%) \n of 4 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"doTryCatch\n0 (0%) \n of 4 (0.19%)" -> "cmpfun\n0 (0%) \n of 4 (0.19%)"[label="  4", penwidth=1];
"eval\n0 (0%) \n of 2102 (99.34%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"eval\n0 (0%) \n of 2102 (99.34%)" -> "eval\n0 (0%) \n of 2102 (99.34%)"[label="  2102", penwidth=3];
"eval\n0 (0%) \n of 2102 (99.34%)" -> "profile_walker\n0 (0%) \n of 2102 (99.34%)"[label="  2102", penwidth=3];
"floor\n12 (0.57%) \n of 12 (0.57%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"genCode\n0 (0%) \n of 4 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"genCode\n0 (0%) \n of 4 (0.19%)" -> "cmp\n0 (0%) \n of 4 (0.19%)"[label="  4", penwidth=1];
"genCode\n0 (0%) \n of 4 (0.19%)" -> "make.codeBuf\n1 (0.05%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"getInlineInfo\n1 (0.05%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"h\n1 (0.05%) \n of 4 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"h\n1 (0.05%) \n of 4 (0.19%)" -> "cmp\n0 (0%) \n of 4 (0.19%)"[label="  4", penwidth=1];
"h\n1 (0.05%) \n of 4 (0.19%)" -> "cmpComplexAssign\n0 (0%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"h\n1 (0.05%) \n of 4 (0.19%)" -> "cmpForBody\n0 (0%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"h\n1 (0.05%) \n of 4 (0.19%)" -> "cmpSymbolAssign\n0 (0%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"is.na\n4 (0.19%) \n of 4 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"isTRUE\n5 (0.24%) \n of 8 (0.38%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"isTRUE\n5 (0.24%) \n of 8 (0.38%)" -> "is.na\n4 (0.19%) \n of 4 (0.19%)"[label="  3", penwidth=1];
"length\n2 (0.09%) \n of 2 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"list\n1 (0.05%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"make.codeBuf\n1 (0.05%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"mapply\n1 (0.05%) \n of 11 (0.52%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"mapply\n1 (0.05%) \n of 11 (0.52%)" -> "<Anonymous>\n0 (0%) \n of 7 (0.33%)"[label="  7", penwidth=1];
"mapply\n1 (0.05%) \n of 11 (0.52%)" -> "simplify2array\n0 (0%) \n of 3 (0.14%)"[label="  3", penwidth=1];
"mean\n7 (0.33%) \n of 10 (0.47%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"mean\n7 (0.33%) \n of 10 (0.47%)" -> "mean.default\n3 (0.14%) \n of 3 (0.14%)"[label="  3", penwidth=1];
"mean.default\n3 (0.14%) \n of 3 (0.14%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"pb$up\n0 (0%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"pb$up\n0 (0%) \n of 1 (0.05%)" -> "cat\n2 (0.09%) \n of 2 (0.09%)"[label="  1", penwidth=1];
"profile_walker\n0 (0%) \n of 2102 (99.34%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"profile_walker\n0 (0%) \n of 2102 (99.34%)" -> "WalkerBivarDirichlet\n35 (1.65%) \n of 2102 (99.34%)"[label="  2102", penwidth=3];
"putconst\n1 (0.05%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"sample.int\n57 (2.69%) \n of 114 (5.39%)"[shape=box,style=filled,color=black,fillcolor="#FFFFC7"fontsize=14];
"sample.int\n57 (2.69%) \n of 114 (5.39%)" -> ">\n18 (0.85%) \n of 18 (0.85%)"[label="  2", penwidth=1];
"sample.int\n57 (2.69%) \n of 114 (5.39%)" -> "stopifnot\n45 (2.13%) \n of 55 (2.6%)"[label="  55", penwidth=2];
"simplify2array\n0 (0%) \n of 3 (0.14%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"simplify2array\n0 (0%) \n of 3 (0.14%)" -> "unlist\n3 (0.14%) \n of 3 (0.14%)"[label="  3", penwidth=1];
"source\n0 (0%) \n of 2102 (99.34%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"source\n0 (0%) \n of 2102 (99.34%)" -> "withVisible\n0 (0%) \n of 2102 (99.34%)"[label="  2102", penwidth=3];
"sqrt\n5 (0.24%) \n of 5 (0.24%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"stats::dgamma\n1 (0.05%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"stats::dnorm\n269 (12.71%) \n of 314 (14.84%)"[shape=box,style=filled,color=black,fillcolor="#FFFF6B"fontsize=28.5208695519614];
"stats::dnorm\n269 (12.71%) \n of 314 (14.84%)" -> "/\n5 (0.24%) \n of 5 (0.24%)"[label="  3", penwidth=1];
"stats::dnorm\n269 (12.71%) \n of 314 (14.84%)" -> "^\n36 (1.7%) \n of 36 (1.7%)"[label="  36", penwidth=2];
"stats::dnorm\n269 (12.71%) \n of 314 (14.84%)" -> "+\n3 (0.14%) \n of 3 (0.14%)"[label="  1", penwidth=1];
"stats::dnorm\n269 (12.71%) \n of 314 (14.84%)" -> "sqrt\n5 (0.24%) \n of 5 (0.24%)"[label="  5", penwidth=1];
"stats::rexp\n31 (1.47%) \n of 31 (1.47%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
"stats::rgamma\n2 (0.09%) \n of 2 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"stats::rnorm\n2 (0.09%) \n of 2 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"stats::runif\n186 (8.79%) \n of 186 (8.79%)"[shape=box,style=filled,color=black,fillcolor="#FFFFA8"fontsize=23.7183473285977];
"stopifnot\n45 (2.13%) \n of 55 (2.6%)"[shape=box,style=filled,color=black,fillcolor="#FFFFE6"fontsize=14];
"stopifnot\n45 (2.13%) \n of 55 (2.6%)" -> "...elt\n5 (0.24%) \n of 6 (0.28%)"[label="  6", penwidth=1];
"stopifnot\n45 (2.13%) \n of 55 (2.6%)" -> "all\n2 (0.09%) \n of 2 (0.09%)"[label="  2", penwidth=1];
"stopifnot\n45 (2.13%) \n of 55 (2.6%)" -> "anyNA\n2 (0.09%) \n of 2 (0.09%)"[label="  2", penwidth=1];
"sum\n1 (0.05%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryCatch\n0 (0%) \n of 4 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryCatch\n0 (0%) \n of 4 (0.19%)" -> "tryCatchList\n0 (0%) \n of 4 (0.19%)"[label="  4", penwidth=1];
"tryCatchList\n0 (0%) \n of 4 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryCatchList\n0 (0%) \n of 4 (0.19%)" -> "tryCatchOne\n0 (0%) \n of 4 (0.19%)"[label="  4", penwidth=1];
"tryCatchOne\n0 (0%) \n of 4 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryCatchOne\n0 (0%) \n of 4 (0.19%)" -> "doTryCatch\n0 (0%) \n of 4 (0.19%)"[label="  4", penwidth=1];
"tryInline\n0 (0%) \n of 4 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryInline\n0 (0%) \n of 4 (0.19%)" -> "getInlineInfo\n1 (0.05%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"tryInline\n0 (0%) \n of 4 (0.19%)" -> "h\n1 (0.05%) \n of 4 (0.19%)"[label="  4", penwidth=1];
"unlist\n3 (0.14%) \n of 3 (0.14%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"utils::setTxtProgressBar\n0 (0%) \n of 1 (0.05%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"utils::setTxtProgressBar\n0 (0%) \n of 1 (0.05%)" -> "pb$up\n0 (0%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"WalkerBivarDirichlet\n35 (1.65%) \n of 2102 (99.34%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"WalkerBivarDirichlet\n35 (1.65%) \n of 2102 (99.34%)" -> ".DPWalkerUpdate\n103 (4.87%) \n of 345 (16.3%)"[label="  345", penwidth=3];
"WalkerBivarDirichlet\n35 (1.65%) \n of 2102 (99.34%)" -> ".SliceSample\n98 (4.63%) \n of 1698 (80.25%)"[label="  1698", penwidth=3];
"WalkerBivarDirichlet\n35 (1.65%) \n of 2102 (99.34%)" -> ".WalkerUpdateAlpha\n1 (0.05%) \n of 3 (0.14%)"[label="  3", penwidth=1];
"WalkerBivarDirichlet\n35 (1.65%) \n of 2102 (99.34%)" -> "apply\n2 (0.09%) \n of 4 (0.19%)"[label="  4", penwidth=1];
"WalkerBivarDirichlet\n35 (1.65%) \n of 2102 (99.34%)" -> "close\n0 (0%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"WalkerBivarDirichlet\n35 (1.65%) \n of 2102 (99.34%)" -> "compiler:::tryCmpfun\n0 (0%) \n of 4 (0.19%)"[label="  4", penwidth=1];
"WalkerBivarDirichlet\n35 (1.65%) \n of 2102 (99.34%)" -> "mapply\n1 (0.05%) \n of 11 (0.52%)"[label="  11", penwidth=1];
"WalkerBivarDirichlet\n35 (1.65%) \n of 2102 (99.34%)" -> "utils::setTxtProgressBar\n0 (0%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"which\n43 (2.03%) \n of 59 (2.79%)"[shape=box,style=filled,color=black,fillcolor="#FFFFE6"fontsize=14];
"which\n43 (2.03%) \n of 59 (2.79%)" -> "==\n1 (0.05%) \n of 1 (0.05%)"[label="  1", penwidth=1];
"which\n43 (2.03%) \n of 59 (2.79%)" -> ">\n18 (0.85%) \n of 18 (0.85%)"[label="  7", penwidth=1];
"which\n43 (2.03%) \n of 59 (2.79%)" -> "isTRUE\n5 (0.24%) \n of 8 (0.38%)"[label="  8", penwidth=1];
"withVisible\n0 (0%) \n of 2102 (99.34%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"withVisible\n0 (0%) \n of 2102 (99.34%)" -> "eval\n0 (0%) \n of 2102 (99.34%)"[label="  2102", penwidth=3];
}