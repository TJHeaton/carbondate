digraph xyz {
rankdir=TB;
"-\n5 (0.16%) \n of 5 (0.16%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
":\n5 (0.16%) \n of 5 (0.16%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"...elt\n7 (0.22%) \n of 11 (0.34%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"...elt\n7 (0.22%) \n of 11 (0.34%)" -> "length\n18 (0.56%) \n of 18 (0.56%)"[label="  4", penwidth=1];
"...length\n3 (0.09%) \n of 3 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".AlphaLogLiklihood\n3 (0.09%) \n of 31 (0.97%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".AlphaLogLiklihood\n3 (0.09%) \n of 31 (0.97%)" -> ".NumberOfObservationsInEachCluster\n62 (1.94%) \n of 879 (27.46%)"[label="  16", penwidth=1];
".AlphaLogLiklihood\n3 (0.09%) \n of 31 (0.97%)" -> "sapply\n1 (0.03%) \n of 11 (0.34%)"[label="  11", penwidth=1];
".AlphaLogLiklihood\n3 (0.09%) \n of 31 (0.97%)" -> "sum\n43 (1.34%) \n of 43 (1.34%)"[label="  1", penwidth=1];
".BivarUpdateClusterIdentifier\n218 (6.81%) \n of 1370 (42.8%)"[shape=box,style=filled,color=black,fillcolor="#FFC400"fontsize=20.8767813611198];
".BivarUpdateClusterIdentifier\n218 (6.81%) \n of 1370 (42.8%)" -> ".LogMarginalNormalGamma\n52 (1.62%) \n of 52 (1.62%)"[label="  52", penwidth=2];
".BivarUpdateClusterIdentifier\n218 (6.81%) \n of 1370 (42.8%)" -> ".NumberOfObservationsInEachCluster\n62 (1.94%) \n of 879 (27.46%)"[label="  863", penwidth=3];
".BivarUpdateClusterIdentifier\n218 (6.81%) \n of 1370 (42.8%)" -> "length\n18 (0.56%) \n of 18 (0.56%)"[label="  1", penwidth=1];
".BivarUpdateClusterIdentifier\n218 (6.81%) \n of 1370 (42.8%)" -> "list\n6 (0.19%) \n of 6 (0.19%)"[label="  6", penwidth=1];
".BivarUpdateClusterIdentifier\n218 (6.81%) \n of 1370 (42.8%)" -> "sample\n23 (0.72%) \n of 176 (5.5%)"[label="  176", penwidth=2];
".BivarUpdateClusterIdentifier\n218 (6.81%) \n of 1370 (42.8%)" -> "stats::dnorm\n308 (9.62%) \n of 348 (10.87%)"[label="  45", penwidth=2];
".BivarUpdateClusterIdentifier\n218 (6.81%) \n of 1370 (42.8%)" -> "sum\n43 (1.34%) \n of 43 (1.34%)"[label="  9", penwidth=1];
".FindSliceInterval\n146 (4.56%) \n of 466 (14.56%)"[shape=box,style=filled,color=black,fillcolor="#FFFF6B"fontsize=17.0833252032501];
".FindSliceInterval\n146 (4.56%) \n of 466 (14.56%)" -> "-\n5 (0.16%) \n of 5 (0.16%)"[label="  2", penwidth=1];
".FindSliceInterval\n146 (4.56%) \n of 466 (14.56%)" -> ".ThetaLogLikelihood\n599 (18.71%) \n of 906 (28.3%)"[label="  252", penwidth=2];
".FindSliceInterval\n146 (4.56%) \n of 466 (14.56%)" -> "&\n3 (0.09%) \n of 3 (0.09%)"[label="  3", penwidth=1];
".FindSliceInterval\n146 (4.56%) \n of 466 (14.56%)" -> "<\n6 (0.19%) \n of 6 (0.19%)"[label="  2", penwidth=1];
".FindSliceInterval\n146 (4.56%) \n of 466 (14.56%)" -> ">\n6 (0.19%) \n of 6 (0.19%)"[label="  1", penwidth=1];
".FindSliceInterval\n146 (4.56%) \n of 466 (14.56%)" -> "c\n19 (0.59%) \n of 19 (0.59%)"[label="  5", penwidth=1];
".FindSliceInterval\n146 (4.56%) \n of 466 (14.56%)" -> "stats::runif\n159 (4.97%) \n of 159 (4.97%)"[label="  55", penwidth=2];
".LogMarginalNormalGamma\n52 (1.62%) \n of 52 (1.62%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
".NumberOfObservationsInEachCluster\n62 (1.94%) \n of 879 (27.46%)"[shape=box,style=filled,color=black,fillcolor="#FFF800"fontsize=14];
".NumberOfObservationsInEachCluster\n62 (1.94%) \n of 879 (27.46%)" -> "apply\n342 (10.68%) \n of 809 (25.27%)"[label="  805", penwidth=3];
".NumberOfObservationsInEachCluster\n62 (1.94%) \n of 879 (27.46%)" -> "max\n23 (0.72%) \n of 23 (0.72%)"[label="  12", penwidth=1];
".SampleFromSliceInterval\n293 (9.15%) \n of 920 (28.74%)"[shape=box,style=filled,color=black,fillcolor="#FFF500"fontsize=24.1991735396067];
".SampleFromSliceInterval\n293 (9.15%) \n of 920 (28.74%)" -> "-\n5 (0.16%) \n of 5 (0.16%)"[label="  2", penwidth=1];
".SampleFromSliceInterval\n293 (9.15%) \n of 920 (28.74%)" -> ".ThetaLogLikelihood\n599 (18.71%) \n of 906 (28.3%)"[label="  511", penwidth=3];
".SampleFromSliceInterval\n293 (9.15%) \n of 920 (28.74%)" -> "(\n3 (0.09%) \n of 3 (0.09%)"[label="  2", penwidth=1];
".SampleFromSliceInterval\n293 (9.15%) \n of 920 (28.74%)" -> "*\n5 (0.16%) \n of 5 (0.16%)"[label="  5", penwidth=1];
".SampleFromSliceInterval\n293 (9.15%) \n of 920 (28.74%)" -> "<\n6 (0.19%) \n of 6 (0.19%)"[label="  3", penwidth=1];
".SampleFromSliceInterval\n293 (9.15%) \n of 920 (28.74%)" -> "stats::runif\n159 (4.97%) \n of 159 (4.97%)"[label="  104", penwidth=2];
".SliceSample\n99 (3.09%) \n of 1648 (51.48%)"[shape=box,style=filled,color=black,fillcolor="#FFA500"fontsize=14.0627166649976];
".SliceSample\n99 (3.09%) \n of 1648 (51.48%)" -> "-\n5 (0.16%) \n of 5 (0.16%)"[label="  1", penwidth=1];
".SliceSample\n99 (3.09%) \n of 1648 (51.48%)" -> ".FindSliceInterval\n146 (4.56%) \n of 466 (14.56%)"[label="  466", penwidth=3];
".SliceSample\n99 (3.09%) \n of 1648 (51.48%)" -> ".SampleFromSliceInterval\n293 (9.15%) \n of 920 (28.74%)"[label="  920", penwidth=3];
".SliceSample\n99 (3.09%) \n of 1648 (51.48%)" -> ".ThetaLogLikelihood\n599 (18.71%) \n of 906 (28.3%)"[label="  143", penwidth=2];
".SliceSample\n99 (3.09%) \n of 1648 (51.48%)" -> "stats::rexp\n19 (0.59%) \n of 19 (0.59%)"[label="  19", penwidth=1];
".ThetaLogLikelihood\n599 (18.71%) \n of 906 (28.3%)"[shape=box,style=filled,color=black,fillcolor="#FFF500"fontsize=34.6040460062115];
".ThetaLogLikelihood\n599 (18.71%) \n of 906 (28.3%)" -> "<\n6 (0.19%) \n of 6 (0.19%)"[label="  1", penwidth=1];
".ThetaLogLikelihood\n599 (18.71%) \n of 906 (28.3%)" -> ">\n6 (0.19%) \n of 6 (0.19%)"[label="  3", penwidth=1];
".ThetaLogLikelihood\n599 (18.71%) \n of 906 (28.3%)" -> "floor\n6 (0.19%) \n of 6 (0.19%)"[label="  6", penwidth=1];
".ThetaLogLikelihood\n599 (18.71%) \n of 906 (28.3%)" -> "stats::dnorm\n308 (9.62%) \n of 348 (10.87%)"[label="  297", penwidth=2];
".UpdateAlphaGammaPrior\n1 (0.03%) \n of 34 (1.06%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
".UpdateAlphaGammaPrior\n1 (0.03%) \n of 34 (1.06%)" -> ".AlphaLogLiklihood\n3 (0.09%) \n of 31 (0.97%)"[label="  31", penwidth=2];
".UpdateAlphaGammaPrior\n1 (0.03%) \n of 34 (1.06%)" -> "stats::dgamma\n2 (0.06%) \n of 2 (0.06%)"[label="  2", penwidth=1];
".UpdatePhiTau\n4 (0.12%) \n of 11 (0.34%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
".UpdatePhiTau\n4 (0.12%) \n of 11 (0.34%)" -> "/\n1 (0.03%) \n of 1 (0.03%)"[label="  1", penwidth=1];
".UpdatePhiTau\n4 (0.12%) \n of 11 (0.34%)" -> "mean\n2 (0.06%) \n of 3 (0.09%)"[label="  3", penwidth=1];
".UpdatePhiTau\n4 (0.12%) \n of 11 (0.34%)" -> "stats::rgamma\n3 (0.09%) \n of 3 (0.09%)"[label="  3", penwidth=1];
"(\n3 (0.09%) \n of 3 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"*\n5 (0.16%) \n of 5 (0.16%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"/\n1 (0.03%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"&\n3 (0.09%) \n of 3 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"^\n35 (1.09%) \n of 35 (1.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
"+\n2 (0.06%) \n of 2 (0.06%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"<\n6 (0.19%) \n of 6 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"<Anonymous>\n0 (0%) \n of 6 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"<Anonymous>\n0 (0%) \n of 6 (0.19%)" -> "stats::dnorm\n308 (9.62%) \n of 348 (10.87%)"[label="  6", penwidth=1];
"==\n63 (1.97%) \n of 63 (1.97%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
">\n6 (0.19%) \n of 6 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"all\n4 (0.12%) \n of 4 (0.12%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"any\n4 (0.12%) \n of 4 (0.12%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"aperm\n44 (1.37%) \n of 69 (2.16%)"[shape=box,style=filled,color=black,fillcolor="#FFFFE6"fontsize=14];
"aperm\n44 (1.37%) \n of 69 (2.16%)" -> "aperm.default\n24 (0.75%) \n of 25 (0.78%)"[label="  25", penwidth=2];
"aperm.default\n24 (0.75%) \n of 25 (0.78%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"aperm.default\n24 (0.75%) \n of 25 (0.78%)" -> "c\n19 (0.59%) \n of 19 (0.59%)"[label="  1", penwidth=1];
"apply\n342 (10.68%) \n of 809 (25.27%)"[shape=box,style=filled,color=black,fillcolor="#FFFF00"fontsize=26.1442154213891];
"apply\n342 (10.68%) \n of 809 (25.27%)" -> "any\n4 (0.12%) \n of 4 (0.12%)"[label="  4", penwidth=1];
"apply\n342 (10.68%) \n of 809 (25.27%)" -> "aperm\n44 (1.37%) \n of 69 (2.16%)"[label="  69", penwidth=2];
"apply\n342 (10.68%) \n of 809 (25.27%)" -> "c\n19 (0.59%) \n of 19 (0.59%)"[label="  6", penwidth=1];
"apply\n342 (10.68%) \n of 809 (25.27%)" -> "dim\n2 (0.06%) \n of 2 (0.06%)"[label="  2", penwidth=1];
"apply\n342 (10.68%) \n of 809 (25.27%)" -> "dimnames\n1 (0.03%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"apply\n342 (10.68%) \n of 809 (25.27%)" -> "FUN\n32 (1%) \n of 128 (4%)"[label="  123", penwidth=2];
"apply\n342 (10.68%) \n of 809 (25.27%)" -> "is.recursive\n3 (0.09%) \n of 3 (0.09%)"[label="  3", penwidth=1];
"apply\n342 (10.68%) \n of 809 (25.27%)" -> "isTRUE\n15 (0.47%) \n of 17 (0.53%)"[label="  17", penwidth=1];
"apply\n342 (10.68%) \n of 809 (25.27%)" -> "length\n18 (0.56%) \n of 18 (0.56%)"[label="  10", penwidth=1];
"apply\n342 (10.68%) \n of 809 (25.27%)" -> "lengths\n20 (0.62%) \n of 20 (0.62%)"[label="  20", penwidth=1];
"apply\n342 (10.68%) \n of 809 (25.27%)" -> "match.fun\n16 (0.5%) \n of 18 (0.56%)"[label="  18", penwidth=1];
"apply\n342 (10.68%) \n of 809 (25.27%)" -> "names\n3 (0.09%) \n of 3 (0.09%)"[label="  2", penwidth=1];
"apply\n342 (10.68%) \n of 809 (25.27%)" -> "prod\n12 (0.37%) \n of 12 (0.37%)"[label="  12", penwidth=1];
"apply\n342 (10.68%) \n of 809 (25.27%)" -> "t\n53 (1.66%) \n of 166 (5.19%)"[label="  166", penwidth=2];
"apply\n342 (10.68%) \n of 809 (25.27%)" -> "unlist\n15 (0.47%) \n of 15 (0.47%)"[label="  14", penwidth=1];
"array\n32 (1%) \n of 41 (1.28%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
"array\n32 (1%) \n of 41 (1.28%)" -> "c\n19 (0.59%) \n of 19 (0.59%)"[label="  7", penwidth=1];
"array\n32 (1%) \n of 41 (1.28%)" -> "is.atomic\n1 (0.03%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"array\n32 (1%) \n of 41 (1.28%)" -> "names\n3 (0.09%) \n of 3 (0.09%)"[label="  1", penwidth=1];
"as.list\n1 (0.03%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"as.matrix\n50 (1.56%) \n of 110 (3.44%)"[shape=box,style=filled,color=black,fillcolor="#FFFFDB"fontsize=14];
"as.matrix\n50 (1.56%) \n of 110 (3.44%)" -> ":\n5 (0.16%) \n of 5 (0.16%)"[label="  5", penwidth=1];
"as.matrix\n50 (1.56%) \n of 110 (3.44%)" -> "as.matrix.default\n14 (0.44%) \n of 55 (1.72%)"[label="  55", penwidth=2];
"as.matrix.default\n14 (0.44%) \n of 55 (1.72%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
"as.matrix.default\n14 (0.44%) \n of 55 (1.72%)" -> "array\n32 (1%) \n of 41 (1.28%)"[label="  40", penwidth=2];
"as.matrix.default\n14 (0.44%) \n of 55 (1.72%)" -> "is.matrix\n1 (0.03%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"c\n19 (0.59%) \n of 19 (0.59%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cat\n3 (0.09%) \n of 3 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cb$putcode\n0 (0%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cb$putcode\n0 (0%) \n of 1 (0.03%)" -> "putconst\n1 (0.03%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"cb$putconst\n0 (0%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cb$putconst\n0 (0%) \n of 1 (0.03%)" -> "genCode\n0 (0%) \n of 6 (0.19%)"[label="  1", penwidth=1];
"cmp\n1 (0.03%) \n of 6 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmp\n1 (0.03%) \n of 6 (0.19%)" -> "cmpCall\n0 (0%) \n of 6 (0.19%)"[label="  6", penwidth=1];
"cmpCall\n0 (0%) \n of 6 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpCall\n0 (0%) \n of 6 (0.19%)" -> "cmpCallExprFun\n0 (0%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"cmpCall\n0 (0%) \n of 6 (0.19%)" -> "cmpCallSymFun\n0 (0%) \n of 2 (0.06%)"[label="  1", penwidth=1];
"cmpCall\n0 (0%) \n of 6 (0.19%)" -> "make.callContext\n1 (0.03%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"cmpCall\n0 (0%) \n of 6 (0.19%)" -> "tryInline\n0 (0%) \n of 6 (0.19%)"[label="  6", penwidth=1];
"cmpCallArgs\n0 (0%) \n of 2 (0.06%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpCallArgs\n0 (0%) \n of 2 (0.06%)" -> "cb$putconst\n0 (0%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"cmpCallArgs\n0 (0%) \n of 2 (0.06%)" -> "cmpConstArg\n0 (0%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"cmpCallExprFun\n0 (0%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpCallExprFun\n0 (0%) \n of 1 (0.03%)" -> "cmp\n1 (0.03%) \n of 6 (0.19%)"[label="  1", penwidth=1];
"cmpCallSymFun\n0 (0%) \n of 2 (0.06%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpCallSymFun\n0 (0%) \n of 2 (0.06%)" -> "cmpCallArgs\n0 (0%) \n of 2 (0.06%)"[label="  2", penwidth=1];
"cmpComplexAssign\n0 (0%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpComplexAssign\n0 (0%) \n of 1 (0.03%)" -> "cmpSetterCall\n0 (0%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"cmpConstArg\n0 (0%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpConstArg\n0 (0%) \n of 1 (0.03%)" -> "cb$putcode\n0 (0%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"cmpForBody\n0 (0%) \n of 3 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpForBody\n0 (0%) \n of 3 (0.09%)" -> "cmp\n1 (0.03%) \n of 6 (0.19%)"[label="  3", penwidth=1];
"cmpfun\n0 (0%) \n of 6 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpfun\n0 (0%) \n of 6 (0.19%)" -> "genCode\n0 (0%) \n of 6 (0.19%)"[label="  6", penwidth=1];
"cmpSetterCall\n0 (0%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpSetterCall\n0 (0%) \n of 1 (0.03%)" -> "as.list\n1 (0.03%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"cmpSymbolAssign\n0 (0%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"cmpSymbolAssign\n0 (0%) \n of 1 (0.03%)" -> "cmp\n1 (0.03%) \n of 6 (0.19%)"[label="  1", penwidth=1];
"compiler:::tryCmpfun\n0 (0%) \n of 6 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"compiler:::tryCmpfun\n0 (0%) \n of 6 (0.19%)" -> "tryCatch\n0 (0%) \n of 6 (0.19%)"[label="  6", penwidth=1];
"dim\n2 (0.06%) \n of 2 (0.06%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"dimnames\n1 (0.03%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"doTryCatch\n0 (0%) \n of 6 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"doTryCatch\n0 (0%) \n of 6 (0.19%)" -> "cmpfun\n0 (0%) \n of 6 (0.19%)"[label="  6", penwidth=1];
"eval\n0 (0%) \n of 3187 (99.56%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"eval\n0 (0%) \n of 3187 (99.56%)" -> "eval\n0 (0%) \n of 3187 (99.56%)"[label="  3187", penwidth=4];
"eval\n0 (0%) \n of 3187 (99.56%)" -> "profile_walker\n0 (0%) \n of 3187 (99.56%)"[label="  3187", penwidth=4];
"floor\n6 (0.19%) \n of 6 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"FUN\n32 (1%) \n of 128 (4%)"[shape=box,style=filled,color=black,fillcolor="#FFFFD1"fontsize=14];
"FUN\n32 (1%) \n of 128 (4%)" -> "==\n63 (1.97%) \n of 63 (1.97%)"[label="  63", penwidth=2];
"FUN\n32 (1%) \n of 128 (4%)" -> "sum\n43 (1.34%) \n of 43 (1.34%)"[label="  33", penwidth=2];
"genCode\n0 (0%) \n of 6 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"genCode\n0 (0%) \n of 6 (0.19%)" -> "cmp\n1 (0.03%) \n of 6 (0.19%)"[label="  6", penwidth=1];
"getInlineInfo\n1 (0.03%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"h\n1 (0.03%) \n of 6 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"h\n1 (0.03%) \n of 6 (0.19%)" -> "cmp\n1 (0.03%) \n of 6 (0.19%)"[label="  6", penwidth=1];
"h\n1 (0.03%) \n of 6 (0.19%)" -> "cmpCallSymFun\n0 (0%) \n of 2 (0.06%)"[label="  1", penwidth=1];
"h\n1 (0.03%) \n of 6 (0.19%)" -> "cmpComplexAssign\n0 (0%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"h\n1 (0.03%) \n of 6 (0.19%)" -> "cmpForBody\n0 (0%) \n of 3 (0.09%)"[label="  3", penwidth=1];
"h\n1 (0.03%) \n of 6 (0.19%)" -> "cmpSymbolAssign\n0 (0%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"is.atomic\n1 (0.03%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"is.function\n2 (0.06%) \n of 2 (0.06%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"is.matrix\n1 (0.03%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"is.na\n1 (0.03%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"is.recursive\n3 (0.09%) \n of 3 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"isTRUE\n15 (0.47%) \n of 17 (0.53%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"isTRUE\n15 (0.47%) \n of 17 (0.53%)" -> "is.na\n1 (0.03%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"isTRUE\n15 (0.47%) \n of 17 (0.53%)" -> "length\n18 (0.56%) \n of 18 (0.56%)"[label="  1", penwidth=1];
"lapply\n0 (0%) \n of 7 (0.22%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"lapply\n0 (0%) \n of 7 (0.22%)" -> "FUN\n32 (1%) \n of 128 (4%)"[label="  5", penwidth=1];
"lapply\n0 (0%) \n of 7 (0.22%)" -> "pmax\n1 (0.03%) \n of 2 (0.06%)"[label="  2", penwidth=1];
"length\n18 (0.56%) \n of 18 (0.56%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"lengths\n20 (0.62%) \n of 20 (0.62%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"list\n6 (0.19%) \n of 6 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"make.callContext\n1 (0.03%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"mapply\n0 (0%) \n of 8 (0.25%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"mapply\n0 (0%) \n of 8 (0.25%)" -> "<Anonymous>\n0 (0%) \n of 6 (0.19%)"[label="  6", penwidth=1];
"mapply\n0 (0%) \n of 8 (0.25%)" -> "simplify2array\n0 (0%) \n of 5 (0.16%)"[label="  2", penwidth=1];
"match.fun\n16 (0.5%) \n of 18 (0.56%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"match.fun\n16 (0.5%) \n of 18 (0.56%)" -> "is.function\n2 (0.06%) \n of 2 (0.06%)"[label="  2", penwidth=1];
"max\n23 (0.72%) \n of 23 (0.72%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"mean\n2 (0.06%) \n of 3 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"mean\n2 (0.06%) \n of 3 (0.09%)" -> "mean.default\n1 (0.03%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"mean.default\n1 (0.03%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"names\n3 (0.09%) \n of 3 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"pb$up\n0 (0%) \n of 3 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"pb$up\n0 (0%) \n of 3 (0.09%)" -> "cat\n3 (0.09%) \n of 3 (0.09%)"[label="  3", penwidth=1];
"pmax\n1 (0.03%) \n of 2 (0.06%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"pmax\n1 (0.03%) \n of 2 (0.06%)" -> "vapply\n1 (0.03%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"PolyaUrnBivarDirichlet\n91 (2.84%) \n of 3187 (99.56%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"PolyaUrnBivarDirichlet\n91 (2.84%) \n of 3187 (99.56%)" -> ".BivarUpdateClusterIdentifier\n218 (6.81%) \n of 1370 (42.8%)"[label="  1370", penwidth=3];
"PolyaUrnBivarDirichlet\n91 (2.84%) \n of 3187 (99.56%)" -> ".SliceSample\n99 (3.09%) \n of 1648 (51.48%)"[label="  1648", penwidth=3];
"PolyaUrnBivarDirichlet\n91 (2.84%) \n of 3187 (99.56%)" -> ".UpdateAlphaGammaPrior\n1 (0.03%) \n of 34 (1.06%)"[label="  34", penwidth=2];
"PolyaUrnBivarDirichlet\n91 (2.84%) \n of 3187 (99.56%)" -> ".UpdatePhiTau\n4 (0.12%) \n of 11 (0.34%)"[label="  11", penwidth=1];
"PolyaUrnBivarDirichlet\n91 (2.84%) \n of 3187 (99.56%)" -> "apply\n342 (10.68%) \n of 809 (25.27%)"[label="  4", penwidth=1];
"PolyaUrnBivarDirichlet\n91 (2.84%) \n of 3187 (99.56%)" -> "compiler:::tryCmpfun\n0 (0%) \n of 6 (0.19%)"[label="  6", penwidth=1];
"PolyaUrnBivarDirichlet\n91 (2.84%) \n of 3187 (99.56%)" -> "length\n18 (0.56%) \n of 18 (0.56%)"[label="  1", penwidth=1];
"PolyaUrnBivarDirichlet\n91 (2.84%) \n of 3187 (99.56%)" -> "mapply\n0 (0%) \n of 8 (0.25%)"[label="  8", penwidth=1];
"PolyaUrnBivarDirichlet\n91 (2.84%) \n of 3187 (99.56%)" -> "max\n23 (0.72%) \n of 23 (0.72%)"[label="  11", penwidth=1];
"PolyaUrnBivarDirichlet\n91 (2.84%) \n of 3187 (99.56%)" -> "utils::setTxtProgressBar\n0 (0%) \n of 3 (0.09%)"[label="  3", penwidth=1];
"prod\n12 (0.37%) \n of 12 (0.37%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"profile_walker\n0 (0%) \n of 3187 (99.56%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"profile_walker\n0 (0%) \n of 3187 (99.56%)" -> "PolyaUrnBivarDirichlet\n91 (2.84%) \n of 3187 (99.56%)"[label="  3187", penwidth=4];
"putconst\n1 (0.03%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"sample\n23 (0.72%) \n of 176 (5.5%)"[shape=box,style=filled,color=black,fillcolor="#FFFFC7"fontsize=14];
"sample\n23 (0.72%) \n of 176 (5.5%)" -> "length\n18 (0.56%) \n of 18 (0.56%)"[label="  1", penwidth=1];
"sample\n23 (0.72%) \n of 176 (5.5%)" -> "sample.int\n67 (2.09%) \n of 152 (4.75%)"[label="  152", penwidth=2];
"sample.int\n67 (2.09%) \n of 152 (4.75%)"[shape=box,style=filled,color=black,fillcolor="#FFFFD1"fontsize=14];
"sample.int\n67 (2.09%) \n of 152 (4.75%)" -> "(\n3 (0.09%) \n of 3 (0.09%)"[label="  1", penwidth=1];
"sample.int\n67 (2.09%) \n of 152 (4.75%)" -> ">\n6 (0.19%) \n of 6 (0.19%)"[label="  2", penwidth=1];
"sample.int\n67 (2.09%) \n of 152 (4.75%)" -> "stopifnot\n64 (2%) \n of 82 (2.56%)"[label="  82", penwidth=2];
"sapply\n1 (0.03%) \n of 11 (0.34%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"sapply\n1 (0.03%) \n of 11 (0.34%)" -> "lapply\n0 (0%) \n of 7 (0.22%)"[label="  7", penwidth=1];
"sapply\n1 (0.03%) \n of 11 (0.34%)" -> "simplify2array\n0 (0%) \n of 5 (0.16%)"[label="  3", penwidth=1];
"simplify2array\n0 (0%) \n of 5 (0.16%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"simplify2array\n0 (0%) \n of 5 (0.16%)" -> "array\n32 (1%) \n of 41 (1.28%)"[label="  1", penwidth=1];
"simplify2array\n0 (0%) \n of 5 (0.16%)" -> "unique\n0 (0%) \n of 3 (0.09%)"[label="  3", penwidth=1];
"simplify2array\n0 (0%) \n of 5 (0.16%)" -> "unlist\n15 (0.47%) \n of 15 (0.47%)"[label="  1", penwidth=1];
"source\n0 (0%) \n of 3187 (99.56%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"source\n0 (0%) \n of 3187 (99.56%)" -> "withVisible\n0 (0%) \n of 3187 (99.56%)"[label="  3187", penwidth=4];
"sqrt\n3 (0.09%) \n of 3 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"stats::dgamma\n2 (0.06%) \n of 2 (0.06%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"stats::dnorm\n308 (9.62%) \n of 348 (10.87%)"[shape=box,style=filled,color=black,fillcolor="#FFFF94"fontsize=24.8128998708333];
"stats::dnorm\n308 (9.62%) \n of 348 (10.87%)" -> "^\n35 (1.09%) \n of 35 (1.09%)"[label="  35", penwidth=2];
"stats::dnorm\n308 (9.62%) \n of 348 (10.87%)" -> "+\n2 (0.06%) \n of 2 (0.06%)"[label="  2", penwidth=1];
"stats::dnorm\n308 (9.62%) \n of 348 (10.87%)" -> "sqrt\n3 (0.09%) \n of 3 (0.09%)"[label="  3", penwidth=1];
"stats::rexp\n19 (0.59%) \n of 19 (0.59%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"stats::rgamma\n3 (0.09%) \n of 3 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"stats::runif\n159 (4.97%) \n of 159 (4.97%)"[shape=box,style=filled,color=black,fillcolor="#FFFFD1"fontsize=17.8347974476864];
"stopifnot\n64 (2%) \n of 82 (2.56%)"[shape=box,style=filled,color=black,fillcolor="#FFFFE6"fontsize=14];
"stopifnot\n64 (2%) \n of 82 (2.56%)" -> "...elt\n7 (0.22%) \n of 11 (0.34%)"[label="  11", penwidth=1];
"stopifnot\n64 (2%) \n of 82 (2.56%)" -> "...length\n3 (0.09%) \n of 3 (0.09%)"[label="  3", penwidth=1];
"stopifnot\n64 (2%) \n of 82 (2.56%)" -> "all\n4 (0.12%) \n of 4 (0.12%)"[label="  4", penwidth=1];
"sum\n43 (1.34%) \n of 43 (1.34%)"[shape=box,style=filled,color=black,fillcolor="#FFFFF0"fontsize=14];
"t\n53 (1.66%) \n of 166 (5.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFC7"fontsize=14];
"t\n53 (1.66%) \n of 166 (5.19%)" -> "as.matrix\n50 (1.56%) \n of 110 (3.44%)"[label="  110", penwidth=2];
"t\n53 (1.66%) \n of 166 (5.19%)" -> "t.default\n3 (0.09%) \n of 3 (0.09%)"[label="  3", penwidth=1];
"t.default\n3 (0.09%) \n of 3 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryCatch\n0 (0%) \n of 6 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryCatch\n0 (0%) \n of 6 (0.19%)" -> "tryCatchList\n0 (0%) \n of 6 (0.19%)"[label="  6", penwidth=1];
"tryCatchList\n0 (0%) \n of 6 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryCatchList\n0 (0%) \n of 6 (0.19%)" -> "tryCatchOne\n0 (0%) \n of 6 (0.19%)"[label="  6", penwidth=1];
"tryCatchOne\n0 (0%) \n of 6 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryCatchOne\n0 (0%) \n of 6 (0.19%)" -> "doTryCatch\n0 (0%) \n of 6 (0.19%)"[label="  6", penwidth=1];
"tryInline\n0 (0%) \n of 6 (0.19%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"tryInline\n0 (0%) \n of 6 (0.19%)" -> "getInlineInfo\n1 (0.03%) \n of 1 (0.03%)"[label="  1", penwidth=1];
"tryInline\n0 (0%) \n of 6 (0.19%)" -> "h\n1 (0.03%) \n of 6 (0.19%)"[label="  6", penwidth=1];
"unique\n0 (0%) \n of 3 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"unique\n0 (0%) \n of 3 (0.09%)" -> "unique.default\n3 (0.09%) \n of 3 (0.09%)"[label="  3", penwidth=1];
"unique.default\n3 (0.09%) \n of 3 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"unlist\n15 (0.47%) \n of 15 (0.47%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"utils::setTxtProgressBar\n0 (0%) \n of 3 (0.09%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"utils::setTxtProgressBar\n0 (0%) \n of 3 (0.09%)" -> "pb$up\n0 (0%) \n of 3 (0.09%)"[label="  3", penwidth=1];
"vapply\n1 (0.03%) \n of 1 (0.03%)"[shape=box,style=filled,color=black,fillcolor="#FFFFFA"fontsize=14];
"withVisible\n0 (0%) \n of 3187 (99.56%)"[shape=box,style=filled,color=black,fillcolor="#FF0000"fontsize=14];
"withVisible\n0 (0%) \n of 3187 (99.56%)" -> "eval\n0 (0%) \n of 3187 (99.56%)"[label="  3187", penwidth=4];
}